{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30775,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!export TOKENIZERS_PARALLELISM=true\n!pip install num2words\n!pip install tqdm\n!pip install git+https://github.com/huggingface/parler-tts.git\n!pip install contractions\n!pip install loguru\n!pip install inflect\n!pip install huggingface_hub","metadata":{"scrolled":true,"_kg_hide-input":true,"_kg_hide-output":true,"execution":{"iopub.status.busy":"2024-09-29T10:33:48.935845Z","iopub.execute_input":"2024-09-29T10:33:48.936351Z","iopub.status.idle":"2024-09-29T10:35:49.565972Z","shell.execute_reply.started":"2024-09-29T10:33:48.936303Z","shell.execute_reply":"2024-09-29T10:35:49.564372Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Requirement already satisfied: num2words in /opt/conda/lib/python3.10/site-packages (0.5.13)\nRequirement already satisfied: docopt>=0.6.2 in /opt/conda/lib/python3.10/site-packages (from num2words) (0.6.2)\nRequirement already satisfied: tqdm in /opt/conda/lib/python3.10/site-packages (4.66.4)\nCollecting git+https://github.com/huggingface/parler-tts.git\n  Cloning https://github.com/huggingface/parler-tts.git to /tmp/pip-req-build-9ae6mar1\n  Running command git clone --filter=blob:none --quiet https://github.com/huggingface/parler-tts.git /tmp/pip-req-build-9ae6mar1\n  Resolved https://github.com/huggingface/parler-tts.git to commit dcaed95e1cce6f616e3e1956f8d63f0f3f5dfe5f\n  Installing build dependencies ... \u001b[?25ldone\n\u001b[?25h  Getting requirements to build wheel ... \u001b[?25ldone\n\u001b[?25h  Preparing metadata (pyproject.toml) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: transformers<=4.43.3,>=4.43.0 in /opt/conda/lib/python3.10/site-packages (from parler_tts==0.2) (4.43.3)\nRequirement already satisfied: torch in /opt/conda/lib/python3.10/site-packages (from parler_tts==0.2) (2.4.0+cpu)\nRequirement already satisfied: sentencepiece in /opt/conda/lib/python3.10/site-packages (from parler_tts==0.2) (0.2.0)\nRequirement already satisfied: descript-audio-codec in /opt/conda/lib/python3.10/site-packages (from parler_tts==0.2) (1.0.0)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (3.15.1)\nRequirement already satisfied: huggingface-hub<1.0,>=0.23.2 in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (0.25.0)\nRequirement already satisfied: numpy>=1.17 in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (1.26.4)\nRequirement already satisfied: packaging>=20.0 in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (21.3)\nRequirement already satisfied: pyyaml>=5.1 in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (6.0.2)\nRequirement already satisfied: regex!=2019.12.17 in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (2024.5.15)\nRequirement already satisfied: requests in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (2.32.3)\nRequirement already satisfied: safetensors>=0.4.1 in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (0.4.5)\nRequirement already satisfied: tokenizers<0.20,>=0.19 in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (0.19.1)\nRequirement already satisfied: tqdm>=4.27 in /opt/conda/lib/python3.10/site-packages (from transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (4.66.4)\nRequirement already satisfied: argbind>=0.3.7 in /opt/conda/lib/python3.10/site-packages (from descript-audio-codec->parler_tts==0.2) (0.3.9)\nRequirement already satisfied: descript-audiotools>=0.7.2 in /opt/conda/lib/python3.10/site-packages (from descript-audio-codec->parler_tts==0.2) (0.7.2)\nRequirement already satisfied: einops in /opt/conda/lib/python3.10/site-packages (from descript-audio-codec->parler_tts==0.2) (0.8.0)\nRequirement already satisfied: torchaudio in /opt/conda/lib/python3.10/site-packages (from descript-audio-codec->parler_tts==0.2) (2.4.0+cpu)\nRequirement already satisfied: typing-extensions>=4.8.0 in /opt/conda/lib/python3.10/site-packages (from torch->parler_tts==0.2) (4.12.2)\nRequirement already satisfied: sympy in /opt/conda/lib/python3.10/site-packages (from torch->parler_tts==0.2) (1.12)\nRequirement already satisfied: networkx in /opt/conda/lib/python3.10/site-packages (from torch->parler_tts==0.2) (3.3)\nRequirement already satisfied: jinja2 in /opt/conda/lib/python3.10/site-packages (from torch->parler_tts==0.2) (3.1.4)\nRequirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from torch->parler_tts==0.2) (2024.6.1)\nRequirement already satisfied: docstring-parser in /opt/conda/lib/python3.10/site-packages (from argbind>=0.3.7->descript-audio-codec->parler_tts==0.2) (0.16)\nRequirement already satisfied: soundfile in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.12.1)\nRequirement already satisfied: pyloudnorm in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.1.1)\nRequirement already satisfied: importlib-resources in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (6.4.0)\nRequirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.14.1)\nRequirement already satisfied: julius in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.2.7)\nRequirement already satisfied: ffmpy in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.4.0)\nRequirement already satisfied: ipython in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (8.21.0)\nRequirement already satisfied: rich in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (13.7.1)\nRequirement already satisfied: matplotlib in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.7.5)\nRequirement already satisfied: librosa in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.10.2.post1)\nRequirement already satisfied: pystoi in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.4.1)\nRequirement already satisfied: torch-stoi in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.2.2)\nRequirement already satisfied: flatten-dict in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.4.2)\nRequirement already satisfied: markdown2 in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (2.5.0)\nRequirement already satisfied: randomname in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.2.1)\nRequirement already satisfied: protobuf<3.20,>=3.9.2 in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.19.6)\nRequirement already satisfied: tensorboard in /opt/conda/lib/python3.10/site-packages (from descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (2.16.2)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging>=20.0->transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (3.1.2)\nRequirement already satisfied: MarkupSafe>=2.0 in /opt/conda/lib/python3.10/site-packages (from jinja2->torch->parler_tts==0.2) (2.1.5)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests->transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests->transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (3.7)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests->transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests->transformers<=4.43.3,>=4.43.0->parler_tts==0.2) (2024.8.30)\nRequirement already satisfied: mpmath>=0.19 in /opt/conda/lib/python3.10/site-packages (from sympy->torch->parler_tts==0.2) (1.3.0)\nRequirement already satisfied: six<2.0,>=1.12 in /opt/conda/lib/python3.10/site-packages (from flatten-dict->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.16.0)\nRequirement already satisfied: decorator in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (5.1.1)\nRequirement already satisfied: jedi>=0.16 in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.19.1)\nRequirement already satisfied: matplotlib-inline in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.1.7)\nRequirement already satisfied: prompt-toolkit<3.1.0,>=3.0.41 in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.0.47)\nRequirement already satisfied: pygments>=2.4.0 in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (2.18.0)\nRequirement already satisfied: stack-data in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.6.2)\nRequirement already satisfied: traitlets>=5 in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (5.14.3)\nRequirement already satisfied: exceptiongroup in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.2.0)\nRequirement already satisfied: pexpect>4.3 in /opt/conda/lib/python3.10/site-packages (from ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (4.9.0)\nRequirement already satisfied: audioread>=2.1.9 in /opt/conda/lib/python3.10/site-packages (from librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.0.1)\nRequirement already satisfied: scikit-learn>=0.20.0 in /opt/conda/lib/python3.10/site-packages (from librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.2.2)\nRequirement already satisfied: joblib>=0.14 in /opt/conda/lib/python3.10/site-packages (from librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.4.2)\nRequirement already satisfied: numba>=0.51.0 in /opt/conda/lib/python3.10/site-packages (from librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.60.0)\nRequirement already satisfied: pooch>=1.1 in /opt/conda/lib/python3.10/site-packages (from librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.8.2)\nRequirement already satisfied: soxr>=0.3.2 in /opt/conda/lib/python3.10/site-packages (from librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.5.0.post1)\nRequirement already satisfied: lazy-loader>=0.1 in /opt/conda/lib/python3.10/site-packages (from librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.4)\nRequirement already satisfied: msgpack>=1.0 in /opt/conda/lib/python3.10/site-packages (from librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.0.8)\nRequirement already satisfied: cffi>=1.0 in /opt/conda/lib/python3.10/site-packages (from soundfile->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.16.0)\nRequirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.2.1)\nRequirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.12.1)\nRequirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (4.53.0)\nRequirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.4.5)\nRequirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (10.3.0)\nRequirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (2.9.0.post0)\nRequirement already satisfied: future>=0.16.0 in /opt/conda/lib/python3.10/site-packages (from pyloudnorm->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.0.0)\nRequirement already satisfied: fire in /opt/conda/lib/python3.10/site-packages (from randomname->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.6.0)\nRequirement already satisfied: markdown-it-py>=2.2.0 in /opt/conda/lib/python3.10/site-packages (from rich->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.0.0)\nRequirement already satisfied: absl-py>=0.4 in /opt/conda/lib/python3.10/site-packages (from tensorboard->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.4.0)\nRequirement already satisfied: grpcio>=1.48.2 in /opt/conda/lib/python3.10/site-packages (from tensorboard->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (1.64.1)\nRequirement already satisfied: markdown>=2.6.8 in /opt/conda/lib/python3.10/site-packages (from tensorboard->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.6)\nRequirement already satisfied: setuptools>=41.0.0 in /opt/conda/lib/python3.10/site-packages (from tensorboard->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (70.0.0)\nRequirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /opt/conda/lib/python3.10/site-packages (from tensorboard->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.7.2)\nRequirement already satisfied: werkzeug>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from tensorboard->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.0.4)\nRequirement already satisfied: pycparser in /opt/conda/lib/python3.10/site-packages (from cffi>=1.0->soundfile->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (2.22)\nRequirement already satisfied: parso<0.9.0,>=0.8.3 in /opt/conda/lib/python3.10/site-packages (from jedi>=0.16->ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.8.4)\nRequirement already satisfied: mdurl~=0.1 in /opt/conda/lib/python3.10/site-packages (from markdown-it-py>=2.2.0->rich->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.1.2)\nRequirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in /opt/conda/lib/python3.10/site-packages (from numba>=0.51.0->librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.43.0)\nRequirement already satisfied: ptyprocess>=0.5 in /opt/conda/lib/python3.10/site-packages (from pexpect>4.3->ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.7.0)\nRequirement already satisfied: platformdirs>=2.5.0 in /opt/conda/lib/python3.10/site-packages (from pooch>=1.1->librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.11.0)\nRequirement already satisfied: wcwidth in /opt/conda/lib/python3.10/site-packages (from prompt-toolkit<3.1.0,>=3.0.41->ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.2.13)\nRequirement already satisfied: threadpoolctl>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from scikit-learn>=0.20.0->librosa->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (3.5.0)\nRequirement already satisfied: termcolor in /opt/conda/lib/python3.10/site-packages (from fire->randomname->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (2.4.0)\nRequirement already satisfied: executing>=1.2.0 in /opt/conda/lib/python3.10/site-packages (from stack-data->ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (2.0.1)\nRequirement already satisfied: asttokens>=2.1.0 in /opt/conda/lib/python3.10/site-packages (from stack-data->ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (2.4.1)\nRequirement already satisfied: pure-eval in /opt/conda/lib/python3.10/site-packages (from stack-data->ipython->descript-audiotools>=0.7.2->descript-audio-codec->parler_tts==0.2) (0.2.2)\nRequirement already satisfied: contractions in /opt/conda/lib/python3.10/site-packages (0.1.73)\nRequirement already satisfied: textsearch>=0.0.21 in /opt/conda/lib/python3.10/site-packages (from contractions) (0.0.24)\nRequirement already satisfied: anyascii in /opt/conda/lib/python3.10/site-packages (from textsearch>=0.0.21->contractions) (0.3.2)\nRequirement already satisfied: pyahocorasick in /opt/conda/lib/python3.10/site-packages (from textsearch>=0.0.21->contractions) (2.1.0)\nRequirement already satisfied: loguru in /opt/conda/lib/python3.10/site-packages (0.7.2)\nRequirement already satisfied: inflect in /opt/conda/lib/python3.10/site-packages (7.4.0)\nRequirement already satisfied: more-itertools>=8.5.0 in /opt/conda/lib/python3.10/site-packages (from inflect) (10.3.0)\nRequirement already satisfied: typeguard>=4.0.1 in /opt/conda/lib/python3.10/site-packages (from inflect) (4.3.0)\nRequirement already satisfied: typing-extensions>=4.10.0 in /opt/conda/lib/python3.10/site-packages (from typeguard>=4.0.1->inflect) (4.12.2)\nRequirement already satisfied: huggingface_hub in /opt/conda/lib/python3.10/site-packages (0.25.0)\nRequirement already satisfied: filelock in /opt/conda/lib/python3.10/site-packages (from huggingface_hub) (3.15.1)\nRequirement already satisfied: fsspec>=2023.5.0 in /opt/conda/lib/python3.10/site-packages (from huggingface_hub) (2024.6.1)\nRequirement already satisfied: packaging>=20.9 in /opt/conda/lib/python3.10/site-packages (from huggingface_hub) (21.3)\nRequirement already satisfied: pyyaml>=5.1 in /opt/conda/lib/python3.10/site-packages (from huggingface_hub) (6.0.2)\nRequirement already satisfied: requests in /opt/conda/lib/python3.10/site-packages (from huggingface_hub) (2.32.3)\nRequirement already satisfied: tqdm>=4.42.1 in /opt/conda/lib/python3.10/site-packages (from huggingface_hub) (4.66.4)\nRequirement already satisfied: typing-extensions>=3.7.4.3 in /opt/conda/lib/python3.10/site-packages (from huggingface_hub) (4.12.2)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging>=20.9->huggingface_hub) (3.1.2)\nRequirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface_hub) (3.3.2)\nRequirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface_hub) (3.7)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface_hub) (1.26.18)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests->huggingface_hub) (2024.8.30)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Import Libraries","metadata":{}},{"cell_type":"code","source":"import os\nfrom datasets import load_dataset\nimport re\nfrom num2words import num2words\nimport torch\nfrom parler_tts import ParlerTTSForConditionalGeneration\nfrom transformers import AutoTokenizer, AutoFeatureExtractor, set_seed\nimport soundfile as sf\nimport scipy\nfrom tqdm import tqdm\nimport contractions\nfrom typing import List\nimport inflect\nfrom dateutil import parser\nfrom datetime import datetime, date, time  # Import the built-in datetime module\nimport torch\nfrom scipy.io import wavfile\nfrom loguru import logger","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-29T10:35:49.569392Z","iopub.execute_input":"2024-09-29T10:35:49.569962Z","iopub.status.idle":"2024-09-29T10:35:58.980785Z","shell.execute_reply.started":"2024-09-29T10:35:49.569903Z","shell.execute_reply":"2024-09-29T10:35:58.979075Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"# Import the dataset\ndataset = load_dataset(\"lingjoor/databricks-dolly-15k-context-3k-rag\")\ndataset = dataset[\"train\"]\ndataset","metadata":{"execution":{"iopub.status.busy":"2024-09-29T10:41:56.865924Z","iopub.execute_input":"2024-09-29T10:41:56.867245Z","iopub.status.idle":"2024-09-29T10:41:57.459406Z","shell.execute_reply.started":"2024-09-29T10:41:56.867190Z","shell.execute_reply":"2024-09-29T10:41:57.458000Z"},"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['instruction', 'context', 'response', 'category'],\n    num_rows: 15011\n})"},"metadata":{}}]},{"cell_type":"code","source":"# Standarizing Column Names\ncolumn_rename_dict = {\n    \"instruction\": \"question\",\n    \"response\": \"answer\"\n}\n\nfor key, value in column_rename_dict.items():\n    dataset = dataset.rename_column(key, value)","metadata":{"execution":{"iopub.status.busy":"2024-09-29T10:41:57.462065Z","iopub.execute_input":"2024-09-29T10:41:57.463159Z","iopub.status.idle":"2024-09-29T10:41:57.473845Z","shell.execute_reply.started":"2024-09-29T10:41:57.463058Z","shell.execute_reply":"2024-09-29T10:41:57.472651Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"# Selecting Only Relevant Categories\ncategory_filter_list = [ \"general_qa\", \"closed_qa\", \"information_extraction\", \"summarization\", \"open_qa\" ]\ndataset = dataset.filter(lambda row: row[\"category\"] in category_filter_list)","metadata":{"execution":{"iopub.status.busy":"2024-09-29T10:41:57.475397Z","iopub.execute_input":"2024-09-29T10:41:57.475890Z","iopub.status.idle":"2024-09-29T10:41:57.488209Z","shell.execute_reply.started":"2024-09-29T10:41:57.475832Z","shell.execute_reply":"2024-09-29T10:41:57.486974Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"# Add the columns for token length of question and answer column\ndef add_token_length_column(dataset, column_name, model_name=\"bert-base-uncased\"):\n    tokenizer = AutoTokenizer.from_pretrained(model_name)\n    \n    def tokenize_and_get_length(examples):\n        tokens = tokenizer(examples[column_name])\n        return {f\"{column_name}_token_length\": [len(input_ids) for input_ids in tokens['input_ids']]}\n    \n    dataset = dataset.map(tokenize_and_get_length, batched=True)\n    return dataset\n\ndataset = add_token_length_column(dataset, column_name=\"question\")\ndataset = add_token_length_column(dataset, column_name=\"answer\")\ndataset","metadata":{"execution":{"iopub.status.busy":"2024-09-29T10:41:57.518262Z","iopub.execute_input":"2024-09-29T10:41:57.519683Z","iopub.status.idle":"2024-09-29T10:41:57.795711Z","shell.execute_reply.started":"2024-09-29T10:41:57.519473Z","shell.execute_reply":"2024-09-29T10:41:57.794335Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['question', 'context', 'answer', 'category', 'question_token_length', 'answer_token_length'],\n    num_rows: 10400\n})"},"metadata":{}}]},{"cell_type":"code","source":"# Plot the token length\nimport plotly.graph_objects as go\n\nfig = go.Figure([\n        go.Histogram(x=dataset[\"question_token_length\"], nbinsx=500, name=\"Question Token Length\", opacity=0.75),\n        go.Histogram(x=dataset[\"answer_token_length\"], nbinsx=500, name=\"Answer Token Length\", opacity=0.75)\n    ])\n\nfig.update_layout(\n    title=\"Histogram of Token Length of Question and Answer.\",\n    xaxis_title=\"Values\", yaxis_title=\"Count\",\n    barmode='overlay', bargap=0.1, bargroupgap=0.2\n)\n\nfig.show()","metadata":{"execution":{"iopub.status.busy":"2024-09-29T10:41:57.797571Z","iopub.execute_input":"2024-09-29T10:41:57.797959Z","iopub.status.idle":"2024-09-29T10:41:58.014805Z","shell.execute_reply.started":"2024-09-29T10:41:57.797920Z","shell.execute_reply":"2024-09-29T10:41:58.013335Z"},"trusted":true},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/html":"<div>                            <div id=\"83b7f236-3a6c-42ab-be94-a3b420f37417\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"83b7f236-3a6c-42ab-be94-a3b420f37417\")) {                    Plotly.newPlot(                        \"83b7f236-3a6c-42ab-be94-a3b420f37417\",                        [{\"name\":\"Question Token Length\",\"nbinsx\":500,\"opacity\":0.75,\"x\":[9,12,26,12,18,27,14,8,7,21,33,8,8,19,7,10,18,15,10,7,32,13,10,8,12,12,6,7,11,11,9,12,39,8,7,9,7,12,14,17,22,15,11,11,17,16,11,21,7,8,12,23,19,9,16,10,10,7,8,11,11,7,12,17,11,7,30,14,7,26,7,18,7,13,15,17,9,12,10,16,13,13,24,26,16,9,7,10,14,7,11,22,16,7,11,15,14,9,15,17,9,15,9,9,12,10,15,10,7,23,8,12,13,11,11,9,9,13,7,12,8,12,20,12,13,8,20,12,10,17,16,14,10,17,17,10,7,16,6,21,9,9,14,13,12,8,9,13,19,15,15,12,19,11,66,7,16,18,22,13,8,11,9,5,8,8,7,13,8,8,9,17,16,15,12,15,13,13,14,18,12,18,10,13,18,10,14,6,34,14,22,12,15,14,21,14,6,11,11,17,16,24,7,14,8,6,8,15,15,10,26,8,30,17,9,40,12,12,12,12,9,28,30,12,10,13,9,10,11,15,12,21,8,22,15,13,17,11,345,31,10,7,8,16,11,9,12,14,9,17,10,8,9,7,14,10,14,7,47,26,7,18,18,11,13,9,24,49,14,11,11,10,15,11,17,9,8,8,33,27,8,7,18,9,19,16,9,7,7,18,16,11,11,13,17,7,28,19,13,16,19,10,17,23,11,11,14,9,13,7,11,8,16,10,23,14,13,7,8,11,14,13,9,13,8,38,10,22,12,10,9,12,23,11,24,24,18,21,15,8,17,7,30,10,14,16,14,12,11,14,11,11,8,8,10,15,9,7,9,15,9,16,7,20,6,14,13,6,14,19,8,20,11,10,23,13,9,15,22,11,39,8,23,11,8,9,16,11,12,16,11,13,12,23,15,18,13,8,7,13,6,13,9,15,13,11,15,7,29,23,9,17,24,12,27,12,18,23,18,13,20,13,16,14,8,13,29,17,10,22,14,9,11,18,10,11,27,384,10,6,12,16,13,10,12,7,12,11,24,21,9,27,17,15,19,16,34,9,10,7,11,33,17,21,20,12,10,14,9,16,15,12,9,8,7,9,7,9,16,13,9,13,26,16,15,15,9,33,18,31,22,7,26,13,15,23,19,7,8,17,13,16,8,9,7,32,18,13,8,20,15,12,12,10,25,19,12,13,10,7,16,18,16,14,13,8,18,22,8,12,10,21,9,9,13,8,25,10,12,7,15,10,11,26,24,34,13,21,17,13,10,11,6,10,8,24,14,24,26,11,14,22,9,9,16,11,10,7,11,9,22,15,32,15,14,14,13,12,19,20,35,16,12,11,22,12,7,14,14,8,8,20,31,9,7,11,15,13,14,15,20,10,14,12,22,10,21,9,133,35,10,17,17,8,9,18,12,15,16,9,14,35,8,10,14,9,8,30,13,12,14,14,23,11,16,8,13,10,29,12,18,13,10,24,27,14,11,13,25,18,11,20,17,33,16,9,13,12,11,12,11,37,10,10,9,25,21,7,14,9,12,9,16,10,8,10,12,11,7,9,13,10,23,11,18,18,26,13,21,22,12,10,44,11,9,7,13,15,10,10,6,18,27,24,20,12,39,14,45,18,9,6,14,11,9,16,20,13,26,18,11,17,31,34,19,12,10,12,33,9,19,9,11,10,11,9,8,9,7,7,18,7,10,10,9,19,20,9,15,6,8,13,16,24,17,11,7,13,16,16,15,11,22,23,17,9,15,9,13,12,20,14,24,7,7,14,22,8,8,8,9,14,21,18,30,11,6,27,21,11,12,24,10,8,11,9,14,7,11,9,8,12,18,12,9,15,26,9,13,12,20,15,8,14,11,17,16,25,11,14,10,12,23,14,23,11,13,12,13,31,16,7,11,10,8,12,8,23,22,15,17,6,16,25,11,8,8,17,13,8,17,18,29,8,13,22,16,14,24,24,11,9,11,8,12,14,10,16,24,10,25,13,16,8,13,16,31,20,12,7,9,101,19,8,10,9,8,14,19,14,7,7,8,12,11,6,14,15,10,12,7,9,6,8,12,21,10,16,9,23,23,10,11,21,9,11,15,24,11,14,10,12,16,11,20,15,11,20,16,18,14,13,16,19,13,27,15,10,8,9,11,30,38,11,18,14,32,20,9,23,14,14,8,15,15,9,10,9,17,8,14,10,8,8,21,10,23,15,9,29,15,8,10,10,11,17,12,7,17,12,7,20,9,9,17,14,14,22,10,7,13,18,15,22,7,12,11,8,11,26,11,15,13,23,14,14,11,8,10,18,13,11,9,13,14,9,15,10,13,11,10,10,12,13,10,9,14,22,24,13,10,11,9,9,8,20,10,14,10,15,16,7,24,8,12,17,9,9,28,23,13,13,10,11,11,13,36,9,6,14,12,20,23,18,10,11,12,11,12,8,18,7,18,9,12,23,13,16,21,15,11,23,15,15,25,13,12,8,12,7,22,54,10,12,34,9,12,18,9,16,7,17,40,12,8,10,8,11,11,15,13,38,11,14,13,15,12,9,13,8,45,14,14,10,23,11,11,9,9,17,13,7,11,16,7,23,9,16,9,10,16,17,8,12,25,31,10,11,13,5,7,10,11,18,20,12,15,9,26,16,8,16,41,8,9,9,11,8,8,7,50,7,14,15,8,10,17,10,23,9,23,9,16,9,8,17,13,9,25,29,14,20,13,10,12,9,13,8,13,8,15,15,13,8,13,21,6,15,23,16,15,15,230,20,9,14,14,12,24,8,9,14,9,15,14,6,11,24,10,8,42,8,11,16,12,7,26,14,20,7,8,16,11,17,11,10,10,13,13,11,14,16,14,22,12,15,8,12,10,23,8,30,16,7,11,23,7,12,12,16,9,17,21,28,22,14,12,23,9,7,6,11,14,16,8,9,8,26,13,11,16,10,9,22,14,11,9,20,9,8,9,14,76,13,17,12,17,13,31,30,11,15,10,12,13,7,11,8,16,9,17,7,23,34,18,12,13,7,12,14,14,20,14,17,6,12,12,14,20,11,13,12,6,8,20,18,16,9,22,19,9,25,15,10,13,11,6,10,14,17,22,10,7,22,10,22,24,17,14,15,23,20,26,9,22,9,15,11,11,22,18,8,34,38,8,11,6,8,13,11,33,14,21,10,11,6,5,7,38,15,15,15,13,17,10,13,23,11,7,14,9,12,13,24,9,10,21,13,14,8,33,12,13,11,22,7,12,15,10,15,48,12,12,13,10,27,13,7,15,10,28,114,11,9,16,9,11,12,36,43,7,10,10,17,16,7,12,25,14,13,12,14,16,27,33,8,24,10,18,10,13,11,6,10,12,8,11,7,21,11,16,16,7,12,7,9,20,8,10,19,9,18,17,15,9,12,8,13,10,9,12,12,8,7,12,40,13,15,8,12,10,16,30,18,17,16,8,15,15,47,9,10,10,13,11,7,13,10,20,45,27,15,33,23,9,9,19,17,11,29,13,13,30,9,14,15,19,11,18,11,9,21,6,10,12,21,7,7,8,17,9,10,22,11,10,12,18,6,11,13,9,15,15,11,21,15,10,22,18,19,13,13,6,14,14,20,9,14,16,13,7,7,11,9,10,10,11,10,11,14,7,12,12,10,13,26,12,19,12,7,9,24,12,16,29,8,18,15,21,13,24,8,18,14,8,24,11,9,9,19,15,39,19,15,14,13,13,9,8,12,8,12,21,35,8,11,14,9,8,9,6,20,14,12,12,8,8,28,18,22,11,9,9,8,12,13,9,18,15,15,7,17,8,11,20,9,7,10,18,11,12,20,10,11,10,26,13,30,13,22,9,9,12,15,18,8,19,8,12,18,6,15,13,8,17,12,16,17,8,8,13,8,25,46,12,18,30,8,18,12,27,14,7,8,7,14,8,19,29,8,9,16,22,9,11,6,12,12,12,17,17,14,11,11,11,8,10,8,12,9,6,8,12,11,20,14,21,10,9,12,8,9,20,8,13,23,120,12,11,9,7,8,11,17,14,12,6,13,14,12,14,13,10,10,12,22,6,10,29,9,11,31,35,21,8,6,6,10,9,11,12,12,8,31,10,9,16,12,22,9,13,175,9,15,18,9,10,8,11,14,17,26,9,24,16,10,22,19,14,21,14,14,9,17,9,8,16,12,9,12,22,12,9,19,22,21,17,9,11,18,13,11,12,17,9,21,19,30,8,11,21,11,16,12,16,15,14,10,24,7,9,10,12,14,8,26,10,21,10,9,8,14,10,11,16,9,16,14,14,19,13,9,10,13,19,9,15,17,10,18,12,15,20,12,12,21,14,13,22,27,15,7,17,15,17,15,25,14,13,13,11,7,15,13,14,26,17,11,13,9,26,11,13,21,16,20,11,13,7,15,13,7,10,8,12,7,18,15,16,15,13,10,15,15,31,7,32,27,11,15,11,17,83,11,10,10,21,8,30,16,27,12,22,16,10,8,11,12,16,8,17,9,20,17,13,8,10,17,20,14,14,14,21,29,9,15,23,15,6,22,10,7,19,25,16,17,20,8,7,8,9,12,7,36,7,8,36,20,9,25,12,10,12,21,11,11,14,15,7,6,11,13,9,16,11,20,19,10,12,9,12,34,10,11,13,13,10,13,14,34,13,9,10,12,10,12,21,11,21,6,9,8,8,8,10,28,16,12,16,25,18,11,10,6,12,14,10,17,21,12,11,11,11,10,14,15,29,15,6,14,20,8,14,20,16,10,13,13,10,7,8,12,8,17,8,13,13,7,7,19,15,16,13,5,16,11,14,22,11,15,10,8,8,9,10,10,18,12,11,48,13,18,13,8,9,15,14,9,12,11,10,15,7,12,14,20,12,9,12,8,13,27,17,9,11,6,8,20,22,11,11,24,8,9,29,16,34,18,9,14,11,8,17,13,13,8,15,24,7,7,9,33,26,8,8,19,9,12,10,22,14,20,12,34,10,14,15,19,10,11,11,15,14,12,10,9,17,12,13,10,16,6,12,9,7,22,37,14,5,13,10,8,10,9,8,14,31,17,15,14,9,12,17,11,17,9,14,18,9,7,33,20,15,19,16,8,24,10,16,35,10,7,13,28,15,16,11,8,12,15,8,9,8,17,7,13,16,14,21,18,17,8,27,10,11,15,6,15,9,14,7,15,28,35,23,13,9,12,18,6,10,15,20,7,15,39,7,25,14,9,9,11,13,7,12,11,10,16,10,11,7,9,15,14,12,14,16,12,10,29,27,13,16,9,9,17,16,8,12,8,13,9,7,11,11,9,7,11,9,7,12,15,13,10,13,22,31,13,12,7,6,16,13,11,14,23,11,29,6,15,19,10,16,6,8,20,21,14,16,12,11,34,10,29,611,11,13,23,53,11,18,18,23,18,21,11,7,9,10,13,22,37,8,18,12,9,17,11,12,10,9,10,10,19,13,24,10,11,9,12,19,10,9,18,8,7,12,13,14,16,14,14,18,21,22,36,12,10,12,10,13,11,13,16,10,8,11,10,17,28,10,8,7,7,8,13,20,11,8,13,15,36,7,12,10,10,9,13,10,10,22,19,13,16,15,12,14,19,8,24,13,15,14,14,13,6,15,21,8,9,26,10,12,17,11,22,7,14,12,7,9,13,15,14,10,11,16,8,13,14,16,13,13,18,8,8,13,22,23,11,12,13,12,18,20,39,17,12,19,10,11,16,9,14,11,15,8,8,10,9,12,28,19,11,14,33,12,9,18,19,22,9,10,20,20,28,16,93,12,17,14,13,8,21,13,19,29,12,7,10,13,39,12,29,31,10,10,16,8,9,8,7,7,11,8,11,9,30,13,7,14,15,19,18,13,13,13,11,18,13,7,8,11,16,7,10,22,12,6,21,72,12,8,17,14,14,14,13,17,24,10,10,12,7,8,11,12,13,14,9,12,19,10,7,13,11,12,7,16,14,18,8,23,10,18,9,19,17,11,17,18,26,8,10,10,7,8,12,16,12,9,10,12,13,20,24,11,10,11,13,27,10,8,20,8,12,30,11,26,9,14,14,8,6,18,28,30,15,8,12,9,11,10,25,11,29,19,9,17,9,33,16,8,27,16,15,9,24,11,11,13,21,8,17,15,19,39,8,16,10,17,12,11,13,19,20,11,15,15,14,7,10,9,10,8,10,15,8,13,20,10,13,7,18,15,24,8,16,11,10,16,8,37,8,15,26,10,11,13,10,13,10,12,10,17,9,6,17,11,10,12,11,28,30,17,7,11,13,14,31,10,9,15,7,14,8,9,7,17,8,16,10,13,26,7,14,62,8,8,12,7,8,15,6,8,11,106,9,23,22,13,7,11,16,22,8,14,9,22,6,16,21,12,17,12,22,6,6,20,9,10,8,16,12,13,21,13,11,10,31,25,12,7,6,15,23,26,18,11,7,25,18,19,11,15,24,22,175,24,15,7,10,19,9,11,15,19,11,21,15,8,18,28,12,21,38,10,21,8,15,11,16,10,16,12,17,5,16,9,11,13,7,18,19,10,13,18,13,7,10,13,21,11,7,15,11,10,12,18,15,13,11,13,16,13,22,29,12,32,25,7,7,11,10,22,8,26,22,10,9,9,11,8,9,12,10,18,16,12,15,8,14,28,10,17,14,23,15,9,20,11,10,10,106,13,36,12,10,20,37,9,18,7,16,43,13,14,12,13,13,14,19,17,11,11,10,30,23,11,13,17,12,16,12,24,10,7,9,27,8,14,9,15,6,11,11,8,9,17,32,30,8,8,13,12,12,46,16,9,9,6,26,14,12,7,9,9,9,10,11,14,19,21,8,7,17,16,11,9,11,9,7,13,21,10,20,10,8,10,11,13,15,12,12,19,15,19,10,17,18,13,16,8,21,10,14,14,10,16,22,8,20,8,9,10,16,16,8,23,7,8,10,13,13,9,15,19,10,8,21,15,22,9,10,52,9,25,16,8,14,16,8,7,14,11,18,12,9,35,19,27,12,7,20,9,15,14,15,8,8,15,17,8,9,11,11,32,11,10,10,12,17,13,12,24,15,9,7,14,20,15,11,16,20,12,25,11,18,15,14,11,8,18,12,12,10,22,12,16,15,13,15,12,10,10,7,6,16,13,16,11,14,20,10,12,13,17,7,15,14,13,19,14,13,16,13,12,19,8,9,14,11,8,10,15,12,19,9,20,11,15,8,7,19,9,10,11,8,17,8,16,26,18,17,21,14,11,9,12,11,13,14,7,15,11,15,10,12,9,15,15,8,10,13,13,12,16,18,13,11,8,10,21,6,6,10,14,19,15,10,11,13,13,24,16,8,8,19,10,11,10,11,11,9,23,7,13,22,11,18,7,10,11,10,7,11,11,17,9,15,25,13,11,13,9,10,14,10,10,35,11,15,12,9,11,14,27,19,11,14,20,26,20,24,12,18,11,16,11,22,27,11,23,22,10,25,20,14,16,9,9,21,9,24,23,13,9,13,12,13,12,12,7,9,16,20,11,14,32,21,22,18,11,11,16,12,11,12,8,14,10,12,21,15,20,9,8,8,9,25,55,9,12,31,14,9,14,8,24,7,15,11,12,8,14,6,9,10,12,23,35,8,19,47,14,20,15,9,10,5,24,13,16,6,8,9,26,27,12,11,25,16,22,13,11,13,13,10,13,10,16,11,19,10,11,7,11,17,6,9,14,7,27,15,10,11,11,19,7,16,16,9,10,14,14,10,19,13,22,9,14,7,15,11,11,17,13,12,6,26,12,10,9,23,13,14,15,10,11,11,9,8,18,19,11,24,19,16,12,14,21,8,9,14,22,37,22,12,9,11,7,8,10,30,6,11,11,12,16,15,8,28,21,10,51,24,10,7,6,18,11,37,26,9,12,12,15,11,12,21,8,10,10,22,17,14,22,11,21,13,19,12,18,17,22,7,12,11,16,13,14,10,8,18,9,14,15,21,12,10,7,13,14,17,7,37,14,8,18,16,12,23,7,19,31,13,8,19,10,25,24,11,20,11,7,102,11,16,11,15,19,12,9,13,25,11,12,13,13,9,12,20,23,11,8,6,16,6,12,22,16,9,25,9,12,10,16,16,13,24,14,10,8,14,9,9,12,28,14,14,8,22,12,9,8,12,14,16,15,16,19,21,15,29,11,8,9,33,11,6,8,11,13,22,9,21,13,10,9,13,10,12,12,14,8,21,8,27,39,16,77,12,9,40,13,16,10,17,8,57,16,23,7,7,25,10,17,11,7,10,20,45,19,16,8,11,17,43,11,8,15,32,10,9,9,25,19,24,13,7,13,11,22,18,13,11,8,18,16,22,21,6,13,17,15,16,17,11,15,19,8,10,15,14,10,12,13,14,9,34,8,15,12,20,38,18,8,19,17,15,7,12,19,20,11,12,11,12,13,9,8,10,10,23,26,20,9,11,10,14,15,8,21,19,11,23,18,8,10,18,13,44,12,19,12,10,11,13,12,14,17,25,13,7,17,10,8,9,31,9,17,7,10,9,8,13,20,14,17,13,20,12,12,18,30,8,17,12,22,9,9,20,8,16,10,18,17,14,22,13,7,12,13,13,14,11,8,13,10,8,12,12,24,8,22,7,17,12,8,23,9,10,25,17,11,12,21,23,12,22,20,6,26,7,21,11,8,10,14,18,10,9,21,25,24,11,9,27,22,8,13,54,10,20,12,16,11,7,17,8,12,18,10,15,12,9,8,11,7,7,14,9,9,14,21,8,14,7,29,17,14,10,14,11,15,11,12,22,24,37,18,8,10,11,16,8,18,11,12,12,13,10,7,13,7,11,24,12,13,12,13,65,9,8,8,13,18,12,11,10,10,36,17,7,10,10,10,9,6,7,11,24,12,8,11,16,10,22,12,20,16,10,15,9,11,7,8,10,8,11,13,17,8,25,9,24,14,15,27,14,13,7,11,10,13,20,20,14,19,21,20,14,28,10,13,15,11,7,21,14,29,16,16,8,13,18,12,13,11,13,8,14,11,16,11,8,16,10,13,11,17,9,10,11,17,14,18,16,12,16,11,21,15,14,7,12,11,26,8,20,19,19,21,10,7,15,20,37,8,12,19,35,19,9,17,15,7,10,9,33,14,15,11,10,9,8,13,15,12,10,8,9,17,12,345,7,8,14,7,13,8,9,9,9,25,8,8,10,25,11,8,20,14,13,10,11,21,22,29,96,10,21,25,16,29,8,15,10,16,7,7,10,15,21,15,11,9,12,15,25,11,11,10,29,12,12,16,16,10,11,10,30,12,14,8,17,12,9,17,13,6,13,13,16,13,10,10,12,10,6,22,25,11,13,8,7,26,10,7,9,10,13,20,13,22,14,9,14,10,14,13,19,7,16,11,8,12,27,18,16,11,14,12,15,7,29,13,19,7,12,11,26,16,25,11,34,12,19,12,9,15,17,13,14,9,37,20,15,11,10,7,15,22,9,8,12,18,14,12,21,13,12,11,27,8,27,16,11,11,26,24,21,8,10,11,11,23,8,11,22,8,24,39,10,15,17,9,9,10,12,10,12,12,732,9,11,13,9,8,11,14,16,14,10,15,7,11,18,7,15,17,22,15,23,8,89,13,9,7,13,23,45,13,15,8,24,16,17,8,14,21,29,16,7,8,15,10,7,10,22,20,9,11,22,16,14,9,9,8,10,14,19,17,13,8,13,7,17,8,18,16,12,19,11,7,15,11,11,22,36,11,8,14,20,12,22,10,10,13,12,10,10,8,16,28,35,14,14,20,21,7,17,18,11,18,8,15,10,10,13,16,24,18,11,9,40,9,22,11,18,18,10,11,9,8,8,9,11,8,10,17,9,18,8,11,16,24,15,17,13,13,10,9,11,23,11,11,11,11,11,18,17,10,12,19,12,11,16,7,11,7,11,23,14,8,11,13,10,6,44,15,13,10,10,8,13,8,39,15,10,21,9,13,13,15,16,7,13,32,10,11,18,8,7,25,14,20,8,10,17,9,11,10,18,20,9,13,17,16,7,10,11,9,24,19,16,16,10,21,14,10,8,7,13,12,9,8,8,758,11,8,35,8,11,17,10,17,13,16,12,12,13,20,15,15,11,11,15,11,11,8,20,8,21,8,27,17,32,13,9,23,21,15,12,15,24,9,21,10,7,20,13,12,11,15,13,12,8,11,7,11,9,8,19,28,10,17,11,23,12,14,17,12,13,11,7,11,14,11,10,9,18,19,15,9,9,7,8,13,11,12,9,10,7,11,24,28,25,15,15,10,8,7,10,9,19,8,6,15,19,16,11,16,8,12,10,11,10,20,64,13,14,10,12,18,21,9,13,14,10,8,12,6,11,15,8,15,16,13,21,15,13,14,33,25,10,14,9,17,13,29,7,22,25,10,13,19,19,20,10,17,16,11,15,12,8,11,9,12,9,25,19,11,10,9,9,18,12,13,8,32,17,9,10,12,15,9,15,11,10,13,12,24,8,24,9,19,11,15,30,14,14,11,20,11,16,13,23,6,12,13,11,11,14,24,10,21,11,16,10,18,11,39,17,9,12,20,19,12,14,9,10,14,5,10,19,12,6,11,26,9,9,12,12,26,16,19,9,9,7,15,16,12,14,42,19,8,10,6,22,13,7,8,12,10,17,11,14,11,14,13,11,12,20,10,11,31,13,29,17,23,9,9,17,13,13,47,14,42,13,23,16,15,9,25,13,11,11,7,9,43,14,20,114,10,14,18,6,9,14,17,22,10,18,14,11,10,13,7,9,9,10,8,27,57,8,19,12,22,10,7,7,26,11,25,9,8,8,10,8,13,10,12,19,14,100,16,13,12,15,15,21,7,7,20,15,9,19,12,11,10,22,12,10,14,34,25,6,11,7,12,13,18,19,13,9,10,22,6,17,9,14,15,13,11,7,19,10,12,9,17,9,13,9,15,13,11,15,10,24,10,40,10,9,24,19,12,14,9,12,25,14,7,11,9,11,10,19,12,22,16,14,23,16,10,30,11,30,43,18,9,29,9,13,11,59,19,18,11,8,13,9,15,13,19,16,13,21,12,7,7,15,15,25,9,8,8,12,13,8,7,25,10,12,25,31,22,20,11,19,12,25,12,11,9,8,11,28,6,11,13,13,11,14,12,20,7,9,22,24,24,30,12,20,12,9,9,12,12,8,11,16,9,8,13,10,32,8,19,19,9,17,11,24,12,11,11,16,18,9,70,9,13,10,12,15,9,38,13,17,7,10,13,19,8,10,6,8,18,13,14,14,31,10,15,21,11,17,28,20,10,18,8,19,48,19,10,30,13,16,8,12,18,48,15,13,20,13,16,14,14,17,11,6,8,9,11,29,16,18,12,21,22,11,11,12,11,8,23,15,13,8,10,11,25,28,8,15,7,12,13,7,7,55,11,10,12,14,8,20,8,14,10,11,23,27,9,21,26,7,14,10,9,11,20,8,8,12,7,11,10,25,9,10,11,17,24,12,12,13,9,16,24,18,17,10,13,9,11,26,24,11,17,9,9,8,19,19,10,25,23,23,15,11,32,7,24,16,15,11,11,20,10,13,15,6,17,14,8,10,19,12,11,9,10,9,10,18,28,12,21,21,11,9,9,32,7,6,28,13,14,17,14,16,13,26,17,10,16,7,9,11,12,8,8,11,6,18,11,15,11,21,10,9,14,8,11,28,10,13,12,17,12,12,6,7,28,27,13,11,10,10,23,13,12,14,8,12,9,7,9,13,20,8,17,11,36,13,18,23,17,10,10,26,6,16,9,32,13,16,9,15,24,35,9,10,24,9,12,15,13,13,9,9,11,120,32,11,28,8,12,14,40,14,20,11,10,14,15,13,19,11,12,13,13,13,16,14,9,11,15,13,22,9,21,7,25,10,17,17,18,10,14,12,17,11,13,10,17,13,12,10,15,20,7,18,9,14,9,10,11,13,16,14,24,18,7,7,11,7,20,8,14,14,6,12,9,15,28,7,33,6,12,10,20,29,17,29,8,25,21,19,13,11,11,10,11,7,26,12,11,26,13,24,16,16,8,10,10,16,11,9,8,20,16,18,7,26,20,13,16,9,25,8,13,9,9,13,13,19,17,21,13,7,21,14,16,14,8,11,5,14,22,8,9,17,15,13,11,12,14,17,10,21,13,7,22,19,14,13,17,23,9,8,24,8,11,15,11,7,7,8,16,21,42,15,10,12,14,13,27,12,28,7,9,24,29,10,7,13,10,9,17,13,13,15,6,30,9,12,8,14,18,14,14,13,9,9,7,19,8,20,12,28,12,11,13,24,19,19,13,17,20,13,15,8,13,16,9,19,16,14,26,12,13,11,8,13,17,12,10,26,7,24,8,19,12,20,27,16,12,12,12,15,15,18,13,22,14,27,16,12,8,12,8,25,10,18,17,11,16,9,15,11,12,17,25,13,26,8,26,15,16,9,24,34,7,12,10,10,37,20,8,10,18,25,17,101,21,20,9,11,8,11,13,12,20,7,7,12,14,9,8,18,9,18,12,14,8,8,31,23,19,12,9,19,10,13,19,15,47,13,26,10,6,18,15,10,11,13,7,10,7,10,10,15,13,13,19,10,7,9,5,8,29,11,11,12,15,13,13,14,11,16,9,12,10,16,17,10,20,24,10,11,8,12,16,8,10,16,8,7,9,11,11,14,13,20,9,13,15,10,19,13,8,27,15,19,10,9,14,22,9,14,8,16,14,10,12,8,10,8,14,28,14,15,9,7,8,14,17,18,11,9,10,12,22,11,14,7,9,8,10,9,9,27,13,10,40,16,7,31,20,10,8,17,32,38,8,24,13,17,15,14,12,9,11,15,29,8,27,10,7,17,10,8,34,12,8,20,12,7,12,10,10,11,19,8,8,15,9,18,7,9,10,14,15,13,18,8,13,24,11,17,9,10,9,6,12,13,13,9,22,15,62,15,12,9,13,13,8,12,10,22,11,12,11,10,12,28,9,9,9,16,9,17,15,17,14,14,27,9,13,14,33,27,12,7,12,13,24,13,23,14,35,16,14,22,15,16,10,16,22,8,9,7,24,13,14,14,11,11,8,6,18,13,21,17,9,12,6,10,19,9,12,10,10,8,16,10,16,9,12,9,14,9,8,8,14,12,15,10,21,7,10,18,16,7,14,19,8,29,21,27,10,7,16,15,14,13,8,30,17,13,8,17,11,10,20,28,8,7,21,22,12,15,11,8,16,13,9,16,18,31,8,15,16,10,11,20,9,11,15,11,7,10,14,10,7,7,16,21,17,8,10,17,9,17,8,10,12,15,12,8,9,15,14,9,19,14,10,32,12,23,17,7,16,29,11,9,11,17,15,16,11,23,8,12,10,8,13,16,16,11,28,16,8,11,11,6,9,17,7,9,22,10,7,16,12,15,8,10,11,16,19,19,8,11,36,19,11,8,9,12,13,10,8,10,9,12,10,13,16,11,25,13,8,11,29,13,7,34,21,5,18,10,6,8,11,20,27,23,8,16,8,10,11,39,10,14,19,11,7,18,21,9,6,10,11,8,15,10,9,67,15,7,9,10,7,8,20,18,13,41,16,10,9,9,10,43,10,6,11,7,10,22,11,11,20,26,7,23,9,13,11,11,13,23,12,12,10,12,11,7,34,9,11,7,8,19,17,10,15,12,23,9,10,13,16,10,14,13,7,12,11,17,13,23,17,7,18,17,9,9,10,9,35,27,31,7,18,10,16,19,8,13,11,7,10,20,11,17,7,53,15,11,13,11,17,17,5,84,9,11,21,14,35,18,21,16,15,10,12,12,15,10,12,14,16,16,16,11,9,10,11,10,26,9,23,18,8,7,12,9,19,11,13,15,39,7,16,15,29,7,39,13,12,8,6,12,10,18,18,8,339,12,13,28,16,19,27,12,11,15,12,7,33,39,22,7,17,13,7,17,13,10,17,22,6,8,18,28,11,8,13,10,22,17,10,14,8,24,7,13,12,13,15,14,14,12,8,10,9,13,15,11,17,9,16,12,13,19,10,8,20,7,15,12,11,21,13,12,10,10,10,11,15,12,8,13,13,6,16,11,10,15,8,11,11,8,16,8,13,16,18,15,10,16,20,17,12,12,12,18,23,9,10,16,22,10,6,8,12,10,19,10,16,10,6,20,10,9,14,12,13,11,15,35,6,15,25,13,12,27,10,13,18,8,19,17,9,13,8,9,32,12,12,13,17,13,17,5,6,13,12,9,14,9,13,8,11,10,13,30,9,18,10,13,6,11,9,15,11,14,9,15,14,9,11,14,9,10,14,8,13,9,7,11,93,9,11,16,76,11,13,9,9,12,13,12,17,5,14,32,10,13,12,14,15,19,11,11,8,21,8,14,15,21,11,14,13,8,16,10,12,18,26,8,13,20,17,11,13,9,13,11,13,9,13,15,12,13,10,18,15,22,8,34,11,8,61,20,10,10,11,19,14,19,21,21,26,19,7,26,11,14,24,26,24,8,10,13,9,19,26,22,13,17,6,9,18,27,12,17,17,14,19,6,28,13,10,8,10,25,11,15,13,26,29,20,7,14,16,21,8,10,15,12,11,11,10,11,12,8,13,8,12,16,9,9,14,16,9,16,6,9,10,10,13,14,8,9,13,12,10,25,12,10,10,12,9,26,18,11,6,13,12,8,8,11,11,13,22,9,13,10,7,22,22,11,23,12,7,9,8,7,7,21,14,8,10,9,14,8,11,11,21,13,10,15,8,14,8,9,13,28,21,8,27,49,10,13,11,27,8,32,9,12,11,13,16,13,8,19,17,6,19,9,11,8,11,14,8,39,8,36,7,20,11,17,21,10,12,14,20,15,7,18,21,13,11,22,10,10,11,9,13,11,25,7,10,15,11,7,31,12,13,8,10,55,11,11,22,16,11,12,19,6,8,14,26,8,25,7,13,30,13,19,13,6,14,11,13,9,13,6,9,16,15,17,12,7,13,16,12,13,8,13,18,13,17,22,20,7,12,15,14,13,7,17,24,18,64,15,22,7,14,9,10,8,36,11,9,10,15,9,17,35,16,13,13,13,8,27,11,19,27,13,11,30,27,8,8,12,13,12,20,9,8,9,21,9,19,6,10,14,15,15,7,8,12,9,20,10,27,6,9,8,9,11,11,10,8,15,26,16,14,10,18,12,11,19,11,10,13,12,20,12,10,10,18,15,24,17,16,15,6,11,11,13,22,11,10,14,8,12,30,15,17,27,7,9,12,22,13,13,12,22,14,15,28,8,16,14,12,16,12,12,7,9,7,26,10,15,11,25,10,12,20,23,28,13,10,8,22,17,11,9,7,8,14,8,7,12,16,11,15,15,16,16,21,6,11,15,13,15,11,13,16,8,14,13,21,13,13,15,8,22,15,13,13,20,8,10,12,13,8,14,12,12,9,9,14,17,10,13,34,14,16,22,7,13,7,10,8,9,10,9,25,11,22,27,15,9,35,11,10,12,9,11,19,10,9,10,9,12,18,12,8,9,13,10,13,16,11,7,15,14,12,7,19,24,24,20,12,10,23,11,10,8,15,13,8,11,7,11,8,8,11,9,17,9,11,15,14,26,13,20,20,23,36,10,16,12,13,9,13,18,24,10,15,15,12,12,23,8,13,16,19,23,19,21,10,8,20,12,24,11,8,7,15,10,10,8,12,12,7,9,18,10,16,22,12,22,15,16,19,7,12,9,16,6,27,18,28,8,9,8,10,11,12,13,24,19,18,17,13,13,16,26,10,29,12,16,7,19,17,14,10,10,15,12,14,20,9,13,19,22,18,15,25,10,6,9,7,9,11,9,8,13,9,28,17,15,8,24,11,11,8,23,22,9,15,10,12,11,27,13,16,24,27,10,13,18,18,24,12,11,9,13,9,6,7,17,12,34,11,7,10,22,8,6,10,12,14,8,10,10,7,17,13,16,7,13,20,15,30,12,9,7,11,7,11,10,17,8,22,16,7,10,14,14,19,8,14,18,16,10,12,16,12,7,12,26,16,11,14,21,7,8,12,9,14,39,21,8,7,14,18,13,18,7,14,31,10,13,10,5,22,30,8,11,17,11,27,16,19,13,20,37,7,11,17,11,7,29,10,9,17,7,7,14,10,5,13,13,12,10,9,14,11,13,9,15,30,8,18,11,9,8,14,8,11,9,13,11,8,6,12,8,28,10,8,20,11,24,21,7,10,11,17,12,6,15,10,10,12,7,10,12,12,22,24,30,12,24,10,9,10,14,14,7,7,7,16,12,12,10,8,17,8,24,17,15,14,21,13,11,21,9,14,9,18,18,21,9,24,28,8,9,23,10,16,17,12,8,31,15,23,15,15,7,11,24,10,19,10,7,9,24,11,7,13,16,20,8,8,18,11,20,34,8,13,12,26,14,11,13,34,14,9,7,14,15,17,20,10,13,10,13,9,14,13,13,14,11,13,10,21,12,13,8,11,15,17,15,20,16,21,21,8,10,9,13,9,11,32,20,10,12,18,15,10,9,19,8,13,18,13,12,13,13,17,10,10,8,6,25,21,10,10,8,10,16,24,29,19,14,14,15,11,10,8,7,23,10,20,14,34,14,14,12,13,13,290,15,9,24,26,13,15,10,12,10,16,11,8,68,10,22,11,19,27,15,30,33,18,14,8,10,8,12,10,18,17,24,7,11,18,19,11,11,12,14,7,39,10,14,16,9,12,16,17,16,18,8,44,11,23,13,23,20,18,6,9,15,6,11,16,9,11,7,10,29,11,11,20,12,15,19,23,30,20,20,8,30,11,11,17,16,17,15,16,12,10,10,10,15,8,28,13,15,8,8,9,12,10,6,8,12,7,14,11,21,7,13,9,15,10,13,7,36,23,14,12,12,11,12,10,11,12,10,20,7,8,30,12,10,31,13,10,25,19,9,16,21,21,8,24,16,7,28,7,12,7,9,17,12,10,12,14,18,12,10,17,13,9,6,14,42,8,13,13,13,12,14,20,14,11,12,28,9,10,9,6407,11,10,21,20,17,44,9,25,10,19,24,9,16,10,6,15,6,13,9,14,7,11,7,14,10,9,7,16,12,15,12,31,12,13,26,12,10,13,17,14,19,14,14,13,26,12,24,16,7,8,10,13,10,13,7,7,24,10,13,8,11,16,12,15,12,732,25,13,9,9,13,8,11,14,9,8,10,13,18,13,22,30,19,17,8,17,26,8,6,19,24,16,11,12,15,13,11,15,11,15,20,14,16,22,10,13,10,8,28,12,16,24,13,10,13,25,15,7,6,12,11,27,21,18,16,7,7,11,25,14,10,17,11,8,9,17,17,11,17,24,13,15,8,19,12,12,23,10,19,14,19,12,10,12,9,15,10,13,22,8,10,6,21,22,12,27,22,9,17,18,13,8,7,18,17,18,10,35,10,11,13,11,9,13,7,12,14,22,11,9,8,8,12,15,13,13,8,7,16,13,11,10,12,14,13,14,12,13,20,13,18,17,12,11,11,22,18,10,19,19,15,16,14,21,17,10,13,30,10,11,13,35,9,8,16,17,18,15,10,9,11,11,19,15,15,15,17,20,24,14,9,8,19,26,12,20,13,10,6,13,11,8,7,10,13,13,18,25,9,8,19,11,9,10,9,12,10,20,9,8,9,9,16,9,9,7,9,7,26,21,31,7,17,12,10,12,15,13,6,27,9,38,17,33,25,14,11,22,17,24,11,19,7,19,8,12,13,27,11,8,11,14,17,8,13,9,11,7,16,25,14,20,29,12,9,20,13,16,12,15,10,12,23,14,9,10,14,11,17,28,9,16,10,12,11,10,9,13,10,10,21,10,8,12,11,21,56,10,11,12,10,12,11,11,6,10,15,10,12,11,13,12,24,10,10,9,13,12,23,16,6,13,18,31,28,12,21,28,6,19,16,25,9,48,10,14,12,19,12,28,26,6,21,9,17,17,7,18,7,38,19,14,13,26,13,24,17,9,7,11,17,12,10,32,10,7,16,21,6,12,13,10,33,20,14,25,15,6,6,17,27,7,15,14,6,12,12,8,9,15,19,11,22,15,16,9,10,7,29,18,9,15,21,13,12,8,15,8,12,13,15,11,8,14,17,23,15,14,21,7,17,17,12,31,22,15,10,21,17,7,732,21,9,15,11,9,12,7,8,18,20,35,8,8,16,14,12,14,15,8,8,12,10,265,7,27,23,11,8,11,16,36,13,13,7,10,7,10,14,24,23,28,15,8,22,11,15,13,9,14,12,10,13,20,12,18,16,27,8,9,16,23,9,9,18,10,7,7,11,8,12,13,11,18,16,9,15,10,23,12,19,23,26,13,8,10,14,15,10,11,10,26,12,8,6,15,8,15,9,17,16,11,16,10,12,25,32,328,37,21,12,13,21,17,8,11,12,9,17,31,15,8,9,15,12,7,10,22,10,9,18,11,9,29,172,15,14,10,14,11,11,14,18,9,23,13,13,14,8,8,8,33,23,10,20,10,10,18,29,7,12,14,9,17,6,12,12,11,9,14,8,9,8,8,15,11,280,8,10,9,9,8,13,20,8,8,15,7,21,23,11,23,15,15,12,11,9,18,17,13,17,12,17,14,10,20,10,6,13,28,19,8,9,7,14,12,7,14,15,27,15,11,10,16,14,14,14,9,24,12,7,9,86,11,8,20,13,14,13,29,9,14,24,25,9,10,21,9,13,10,15,10,9,7,19,9,15,8,14,10,11,10,18,13,27,18,9,20,8,10,8,14,10,13,12,12,15,16,13,7,7,11,22,12,21,15,10,10,8,14,22,13,8,15,11,13,12,14,13,13,19,14,23,22,17,9,23,9,14,11,11,21,12,29,17,9,7,23,10,15,13,73,12,10,9,33,12,13,12,16,35,12,11,6,13,14,32,10,12,11,7,14,12,22,25,10,9,23,8,13,9,13,8,17,6,13,7,11,11,26,14,12,12,10,30,14,11,6,21,9,12,8,11,8,17,11,22,6,8,18,9,10,14,7,11,11,22,18,16,9,10,12,8,23,7,12,12,12,33,8,12,10,24,10,13,14,8,14,9,12,7,26,31,18,12,9,8,23,13,9,9,10,39,10,16,20,11,11,16,20,29,11,11,8,7,12,20,10,12,14,8,16,14,19,8,9,12,8,21,8,29,7,15,9,9,30,13,23,10,12,8,16,20,28,18,12,12,10,15,15,8,6,10,14,14,35,15,11,7,11,13,16,29,19,11,27,11,57,9,14,22,10,35,20,16,16,14,10,11,10,10,20,15,271,13,10,12,11,8,12,16,21,11,6,24,23,7,12,25,11,12,7,22,10,14,14,20,8,15,8,7,10,14,11,7,9,14,16,14,7,12,9,18,11,17,91,34,14,24,12,12,12,8,11,10,13,26,9,17,17,23,8,20,18,15,11,11,10,12,14,24,13,8,9,9,7,18,12,25,19,14,13,10,15,10,9,10,8,10,14,10,12,13,9,10,15,11,14,12,9,12,12,16,20,12,12,11,21,13,14,13,11,19,13,12,11,13,22,10,14,13,20,11,8,8,15,12,13,13,23,18,9,9,19,30,23,14,10,9,8,13,11,8,10,11,12,14,13,12,26,9,8,14,34,7,23,6,25,11,14,15,13,8,12,8,10,9,10,11,25,9,16,7,11,12,45,23,17,11,10,14,9,29,9,13,10,14,10,12,11,8,18,14,14,18,12,7,7,7,12,23,18,135,10,12,14,12,14,13,36,14,8,8,11,12,13,11,13,12,17,11,13,11,18,14,20,9,20,20,8,11,10,12,9,13,10,11,12,7,17,10,410,13,10,15,13,22,8,13,14,17,10,10,9,10,15,41,7,14,17,8,15,10,31,12,10,9,12,8,9,16,15,20,13,29,13,7,10,9,9,14,7,8,17,17,16,9,11,14,14,23,16,16,6,14,7,18,11,13,19,8,21,7,17,15,14,7,8,32,23,9,33,9,9,10,15,18,16,38,20,7,12,15,34,14,7,22,13,12,17,18,14,12,12,10,24,11,24,19,13,18,16,25,20,6,12,7,26,10,27,19,9,8,18,6,14,37,41,10,16,10,8,35,15,33,12,10,8,12,18,7,19,12,9,13,31,14,10,19,7,12,8,12,20,12,9,17,10,25,19,14,8,16,10,15,15,11,12,24,23,16,10,23,34,8,8,12,7,16,16,21,12,11,10,10,11,15,24,23,10,20,10,13,7,18,13,22,12,10,28,20,9,11,17,31,14,9,8,12,16,13,24,25,9,11,11,12,16,7,15,11,18,11,7,11,10,8,9,11,19,10,14,13,29,11,11,12,13,9,10,25,15,15,11,12,12,24,11,12,10,16,9,22,25,14,8,23,15,10,10,16,19,18,11,10,7,9,7,11,9,17,21,11,26,14,10,6,11,11,12,23,8,6,10,15,11,7,19,30,8,12,6,17,8,10,19,20,21,16,16,16,10,16,36,13,11,9,17,8,11,15,22,13,7,33,9,12,27,35,10,10,91,6,17,11,11,9,20,11,8,11,16,19,9,9,21,6,9,9,26,10,14,8,17,12,14,17,28,13,7,10,14,11,18,10,10,23,12,11,15,11,18,12,27,17,11,19,7,23,41,21,24,12,14,9,10,16,18,10,12,13,9,15,13,8,10,17,15,9,15,19,11,9,19,14,12,12,10,22,11,19,14,10,16,13,8,12,21,11,17,21,17,13,22,12,10,24,19,14,11,14,14,17,19,18,15,14,8,10,10,10,23,13,13,36,37,8,7,9,13,9,10,10,8,13,10,15,13,10,8,13,11,14,15,25,12,19,9,20,11,12,19,17,19,11,10,21,11,10,18,9,18,10,18,35,13,19,15,19,12,21,12,17,11,12,15,25,24,12,8,18,28,13,23,9,10,13,8,11,10,12,12,8,7,9,9,25,13,21,22,8,12,6,15,10,8,7,19,11,11,15,17,26,8,28,10,10,10,12,15,13,13,14,14,30,13,13,12,12,10,9,16,9,17,17,12,12,12,11,8,9,53,12,17,8,13,5,12,15,13,14,10,20,31,23,10,8,11,12,11,7,11,14,10,19,21,27,9,10,15,15,15,20,36,16,10,10,14,9,15,12,12,11,13,12,14,9,9,11,18,27,14,11,23,13,12,12,18,10,9,10,10,17,8,8,16,11,20,10,14,14,10,20,18,23,13,13,8,26,15,12,12,10,9,12,11,12,21,11,14,12,11,16,9,10,11,35,11,22,13,14,17,11,20,13,14,8,6,12,23,16,24,8,22,29,10,22,19,14,18,11,9,21,14,15,11,8,10,14,8,13,15,9,13,10,14,11,10,21,15,14,8,15,14,12,12,10,18,29,12,10,9,7,16,12,13,14,11,8,13,232,10,12,12,10,15,25,11,10,9,11,19,10,14,7,10,11,18,8,10,14,10,21,125,11,32,10,23,9,11,8,9,10,12,25,13,12,7,7,11,8,9,21,8,31,15,38,14,16,15,12,21,18,13,10,8,24,8,8,10,10,14,8,16,12,35,24,7,22,27,22,11,9,18,14,13,10,13,8,9,7,11,11,18,8,13,9,8,13,9,13,11,24,35,20,26,17,7,21,23,11,15,15,13,21,18,11,34,18,8,8,9,10,20,26,13,11,12,7,8,12,9,12,8,18,13,11,8,371,16,9,11,13,8,6,9,13,10,9,8,10,12,6,10,14,16,19,13,9,25,11,21,13,11,7,11,20,14,16,30,14,9,12,15,20,11,11,13,13,21,8,9,8,9,17,13,14,8,10,38,25,9,12,19,15,6,8,8,13,10,9,11,9,11,9,9,11,14,28,8,14,21,8,22,14,13,11,8,22,9,10,11,14,21,20,12,23,20,6,13,13,33,10,18,12,12,22,20,14,12,21,13,11,18,22,7,16,13,43,24,23,17,12,7,9,11,16,11,9,17,19,20,7,14,12,13,6,10,26,9,6,21,11,9,9,7,14,15,26,11,9,15,26,12,10,6,19,9,31,7,12,15,13,10,19,11,11,20,15,12,253,26,11,7,29,11,14,21,14,14,10,11,12,8,19,15,11,12,10,17,25,14,20,24,12,28,13,11,25,10,13,6,12,11,20,7,13,18,12,14,8,9,31,10,15,11,19,12,9,21,12,24,12,20,11,8,14,13,11,13,8,18,13,16,14,5,7,28,10,13,17,27,9,13,8,15,10,18,15,10,13,27,7,14,31,7,29,14,34,22,8,9,16,6,12,9,14,10,7,21,11,15,8,12,19,15,7,25,12,14,21,18,11,10,18,9,10,12,7,8,18,9,13,13,25,11,102,4,8,13,13,11,22,18,10,11,9,14,16,21,28,15,7,17,11,12,27,12,18,11,19,9,11,9,12,12,10,24,15,15,10,7,13,15,7,7,10,10,21,12,19,13,17,6,36,8,5,12,27,20,19,10,7,20,25,7,28,7,20,10,16,23,12,10,11,9,7,9,8,12,13,25,12,12,26,7,12,14,18,7,8,13,8,23,11,26,10,8,26,10,14,13,11,13,4,13,8,12,7,12,14,8,12,8,11,8,11,11,14,16,11,9,7,7,17,15,23,9,15,16,14,7,11,9,12,13,7,8,9,15,10,9,14,12,19,9,13,24,12,11,14,21,13,12,16,11,14,16,8,34,11,8,7,9,14,9,14,15,8,10,12,8,12,8,14,7,14,6,18,20,27,19,8,18,23,19,7,8,14,16,16,7,19,19,15,11,21,10,11,11,8,12,9,14,15,14,12,11,8,15,6,11,12,19,13,14,11,13,28,11,20,18,8,31,11,14,27,15,12,30,11,52,12,19,16,7,10,20,7,15,15,14,47,10,7,10,12,18,16,23,24,12,21,9,16,7,23,13,9,19,18,8,12,17,23,9,16,11,9,9,22,25,10,9,30,15,14,15,7,9,35,17,15,16,9,7,23,9,21,15,12,22,22,11,20,8,7,14,27,17,11,14,11,9,18,8,8,16,9,14,18,18,46,9,15,14,12,21,24,9,7,22,11,11,10,9,13,13,16,10,12,9,11,12,9,20,7,19,11,9,12,9,22,19,10,17,11,33,9,8,21,10,15,16,13,13,12,9,9,11,17,12,6,23,11,9,12,15,11,13,17,12,12,15,13,11,17,8,11,17,9,20,17,31,10,10,22,8,24,17,14,22,12,9,14,21,17,14,13,24,10,22,14,18,10,12,12,19,9,12,14,12,10,16,12,12,10,10,17,8,19,16,23,10,13,8,21,14,13,6,12,11,16,7,16,11,15,13,18,15,10,10,16,19,25,10,8,13,21,25,31,18,11,11,18,10,22,6,9,16,15,37,20,13,8,11,17,12,20,17,12,23,15,14,8,8,21,26,23,12,16,12,8,10,14,21,12,8,11,17,11,15,16,8,18,17,9,11,17,15,12,16,13,13,15,14,14,10,9,22,15,10,11,13,11,13,9,7,15,8,9,11,15,14,7],\"type\":\"histogram\"},{\"name\":\"Answer Token Length\",\"nbinsx\":500,\"opacity\":0.75,\"x\":[22,26,10,16,27,133,7,153,1024,31,13,98,96,26,22,47,18,5,11,91,92,16,14,140,4,86,216,184,87,5,17,324,283,99,182,22,32,13,16,92,5,142,3,9,25,47,236,119,38,294,85,113,33,99,30,43,41,71,44,15,17,1747,74,57,32,94,29,90,53,33,18,227,202,266,41,29,70,77,118,34,4,326,223,5,254,13,81,10,116,32,49,23,31,36,98,178,15,316,58,19,89,21,119,19,83,210,25,65,79,15,117,16,397,65,76,75,116,27,118,31,171,4,16,61,91,15,38,38,96,232,72,15,30,5,38,73,20,132,15,166,44,38,32,53,95,24,47,57,481,42,131,206,18,19,49,129,21,25,46,123,5,27,532,48,74,34,65,4,517,133,10,64,161,171,27,22,22,46,133,47,221,126,33,32,236,39,96,606,81,54,298,23,142,16,5,10,31,41,27,13,20,33,122,166,3,48,155,173,5,79,39,45,127,3,62,39,355,47,14,10,128,111,26,49,54,5,5,155,15,111,24,26,71,13,15,195,6,87,33,23,54,394,294,20,103,70,90,161,14,189,8,88,194,31,6,6,215,125,127,29,402,45,14,177,136,65,75,94,104,119,113,136,33,18,45,129,26,49,124,29,294,173,88,53,5,15,66,45,114,92,6,5,107,36,96,25,57,23,27,18,15,123,99,24,261,41,28,21,33,35,93,42,81,63,33,39,121,70,285,18,148,13,187,710,28,234,3,36,125,22,188,106,51,178,24,523,277,130,129,267,74,27,29,8,5,29,41,525,3,79,46,29,40,33,35,98,22,61,139,37,50,164,40,3,55,64,180,36,151,76,102,30,290,107,16,55,390,67,40,87,94,28,218,44,102,9,57,237,94,99,8,160,4,9,162,19,27,142,53,46,56,59,248,90,68,92,29,247,15,73,13,122,14,16,20,13,65,19,20,161,78,142,17,101,247,3,26,17,9,16,15,139,166,57,21,203,27,27,400,85,33,28,63,72,568,401,109,7,52,63,76,84,40,121,12,31,62,17,51,70,4,22,93,32,284,98,89,65,21,20,15,43,4,53,620,61,43,62,9,18,41,72,16,28,33,208,67,14,17,41,10,233,4,83,38,25,22,48,102,3,20,50,83,37,53,77,12,68,50,136,133,50,286,25,42,79,21,22,11,25,82,27,28,13,21,27,5,173,90,5,14,29,120,458,48,72,27,149,26,32,4,26,121,47,19,35,5,33,4,15,158,3,29,180,32,10,81,114,12,27,31,23,614,95,35,5,80,52,185,78,28,173,32,25,48,38,198,129,131,154,49,122,51,6,5,41,106,7,56,65,157,19,21,48,62,35,21,13,101,24,24,230,81,16,10,64,286,27,6,28,73,25,3,26,28,18,64,66,84,6,348,7,206,61,121,33,23,87,53,37,185,126,24,45,19,78,202,111,96,4,59,43,68,12,28,17,58,45,99,5,127,51,63,335,103,359,5,40,15,52,10,26,103,54,154,18,56,172,11,45,47,150,99,20,67,16,22,21,46,71,66,25,25,54,20,12,28,92,22,30,71,75,35,9,78,91,24,375,336,57,166,27,37,117,21,116,26,16,219,69,76,470,83,6,115,53,102,4,73,298,14,49,78,54,111,25,28,29,53,6,8,8,18,18,8,79,123,51,20,174,22,11,30,105,157,47,135,23,393,133,57,276,10,346,109,80,31,106,4,75,24,91,58,41,17,53,80,448,26,17,115,50,19,93,667,27,26,26,50,29,23,34,232,139,38,23,75,25,862,42,84,27,11,57,36,52,141,89,126,113,128,80,497,80,38,55,35,72,60,27,313,26,42,586,41,4,405,28,32,178,5,19,18,30,29,8,262,27,123,25,91,90,778,13,142,91,66,6,231,82,5,85,42,17,96,143,7,47,43,27,960,53,143,98,65,18,66,13,23,10,3,68,15,103,73,7,132,11,9,28,41,53,29,69,20,93,14,401,44,456,97,40,122,132,68,65,86,16,12,99,71,67,23,170,30,47,27,3,67,113,27,38,10,73,42,112,104,171,30,59,50,80,11,34,72,5,108,325,28,45,71,104,33,86,202,211,53,138,83,26,4,48,56,121,28,9,293,33,34,31,92,167,52,7,31,161,27,5,13,43,103,184,47,37,155,146,123,12,6,113,116,8,20,57,9,18,33,13,261,49,15,58,107,127,114,60,5,38,53,58,16,88,79,70,15,5,149,178,81,511,16,14,168,4,124,38,99,81,6,58,30,117,30,5,60,77,16,3,8,23,40,75,59,13,66,48,347,33,499,20,79,22,50,96,99,115,129,246,80,74,79,26,9,93,26,79,15,92,55,77,9,853,174,116,43,18,125,110,125,12,13,5,39,22,21,15,61,75,218,139,4,14,49,58,28,66,35,18,7,282,94,18,83,13,33,33,12,69,72,57,5,328,106,103,29,20,90,154,381,65,53,98,14,21,46,133,8,45,44,25,583,11,99,13,153,220,182,171,106,27,60,37,11,19,73,58,68,197,169,65,46,4,155,91,96,72,427,25,53,117,183,69,172,31,72,15,19,16,66,32,17,11,102,15,24,23,58,6,95,58,13,164,19,62,14,30,25,52,12,5,87,57,7,39,12,13,139,5,211,154,20,14,17,352,218,83,21,92,16,137,85,380,21,108,26,6,105,85,33,14,26,47,13,126,19,23,47,76,70,141,53,30,4,36,22,116,5,14,5,17,13,29,27,14,93,19,184,39,15,141,36,9,502,28,26,22,174,11,276,568,88,28,69,68,34,44,7,4,14,404,61,25,24,44,76,132,13,58,127,246,62,17,21,299,5,98,71,281,17,79,55,446,21,32,59,82,52,15,216,17,10,50,15,58,27,25,26,20,18,61,187,82,141,21,24,132,12,12,23,184,4,33,102,236,37,33,16,92,159,61,83,16,272,39,29,131,27,9,74,24,58,112,42,35,115,249,5193,74,19,98,49,92,30,150,145,69,148,20,196,144,93,13,84,42,74,53,4,32,149,36,134,47,73,30,24,16,13,125,18,75,88,10,16,78,24,13,67,10,5,95,72,203,24,69,342,40,37,138,106,19,46,22,33,13,48,53,62,266,58,44,13,59,64,29,33,73,50,6,149,3,105,52,20,10,3,70,147,28,72,108,86,11,96,86,24,61,29,54,74,54,66,88,50,31,26,105,67,4,5,82,57,67,29,248,111,60,43,14,17,82,46,30,107,4,93,13,81,64,28,6,19,15,88,9,91,14,195,22,257,207,1069,10,94,58,6,280,17,39,35,249,12,73,61,34,44,19,81,8,110,15,5,93,835,6,93,94,17,412,28,25,6,125,53,7,57,43,20,112,39,20,52,25,38,38,31,65,99,134,21,78,25,21,47,213,14,34,244,86,55,36,119,38,164,59,4,17,155,49,16,130,29,135,77,179,163,94,87,420,129,66,69,47,50,156,208,6,12,44,3,16,50,15,71,90,9,30,45,5,57,72,8,17,38,72,58,47,67,272,101,32,43,41,26,74,37,161,38,697,19,12,35,179,20,28,141,15,24,167,22,45,21,18,101,27,153,62,111,5,71,21,27,76,4,117,58,95,108,36,13,48,53,7,30,159,13,52,238,39,53,122,174,49,52,145,81,147,172,13,72,123,26,81,13,23,44,20,111,125,216,16,76,31,7,43,60,68,6,46,76,17,71,90,8,7,72,85,39,150,100,49,454,28,13,92,58,62,452,7,8,15,57,93,43,66,151,4,158,8,232,3,116,3,121,17,75,29,67,54,18,12,33,81,48,20,15,35,19,57,11,14,35,13,79,85,145,21,13,11,106,10,36,3,28,94,85,28,13,74,53,169,36,95,83,22,26,87,172,535,9,39,10,28,49,25,111,15,33,34,31,251,227,82,18,88,194,17,4,4,55,4,65,59,265,191,12,176,68,86,23,31,81,9,30,31,72,24,27,197,115,27,64,9,17,27,124,135,89,12,15,3,132,80,17,28,78,10,30,31,35,27,18,20,16,28,124,5,27,23,11,21,40,22,156,21,76,78,264,58,47,127,89,4,5,30,99,66,8,33,15,15,109,84,149,17,15,9,42,254,7,108,5,16,77,92,58,22,13,48,30,21,208,4,111,46,127,50,20,98,12,19,85,126,26,46,32,26,15,5,87,24,78,11,19,25,60,24,89,13,21,53,36,85,15,87,28,49,10,4,4,48,24,116,405,31,5,7,41,27,118,33,30,70,84,9,6,111,8,16,50,31,4,112,47,16,31,42,21,106,23,49,5,136,6,23,113,42,24,70,99,8,40,19,3,507,161,48,119,163,4,82,3,85,55,222,17,11,213,100,207,85,17,144,18,144,104,24,34,116,34,484,68,81,98,71,45,104,27,28,190,49,6,35,20,3,29,59,42,19,112,8,7,318,10,26,65,23,24,94,41,181,102,10,6,10,87,157,455,281,90,65,33,51,81,13,116,99,68,119,15,21,3,8,25,122,41,18,174,128,56,71,90,45,13,20,59,30,18,21,41,118,76,204,103,147,38,404,46,6,16,18,12,100,8,45,97,13,179,7,128,12,3,47,52,18,82,17,20,40,47,37,77,92,46,41,99,153,163,131,55,23,105,95,68,138,44,12,46,4,14,48,36,17,66,19,71,82,61,109,109,15,18,61,84,19,312,22,223,41,17,12,76,78,91,161,100,9,36,52,80,132,37,73,42,20,19,371,63,9,106,189,50,26,21,24,121,47,175,84,298,51,64,27,3,63,63,58,98,170,32,61,52,59,49,23,34,161,4,77,144,42,49,23,208,241,17,9,112,9,83,110,71,168,176,60,132,19,79,78,11,24,174,59,22,10,90,46,190,32,41,66,4,35,9,165,148,37,153,105,46,17,118,62,214,216,52,76,61,10,28,114,106,106,5,94,22,58,118,235,11,80,14,441,10,55,19,44,4,11,12,414,47,4,112,100,59,16,217,31,78,50,89,43,53,299,137,4,17,32,43,24,4,63,32,54,9,13,167,64,535,11,5,36,30,30,14,21,44,23,18,149,119,23,233,20,10,4,98,22,243,19,279,60,15,14,107,78,7,94,28,4,85,118,106,22,11,393,7,32,58,12,23,63,30,52,3,111,84,57,19,53,118,32,69,32,83,5,12,36,110,76,43,82,5,3,43,55,21,7,50,27,53,4,39,74,128,239,16,159,5,113,52,59,26,97,74,40,148,151,120,35,68,113,114,60,22,122,98,44,107,46,10,26,17,41,13,127,664,70,268,45,99,135,44,18,24,25,27,20,6,97,190,75,12,153,20,27,45,26,48,5,155,99,144,181,125,9,28,19,26,12,19,183,54,28,85,143,10,22,236,71,16,94,29,145,68,32,157,133,67,14,28,37,187,63,17,659,4,58,29,50,60,27,44,178,53,13,22,4,361,4,40,68,17,5,32,74,28,19,397,40,63,42,18,5,167,41,7,30,22,87,100,121,15,5,85,23,30,18,64,139,9,140,97,47,113,113,26,39,45,148,195,8,667,30,1049,31,3,97,117,10,10,42,21,26,290,46,12,23,359,392,116,114,16,15,81,386,90,16,16,74,77,216,22,71,49,30,36,22,3,80,60,5,3,8,94,31,41,67,28,16,28,4,24,59,24,202,63,11,52,7,118,22,57,7,31,29,16,112,47,144,33,11,46,22,199,34,61,69,9,23,149,30,13,19,40,38,29,35,16,84,20,80,50,380,78,19,22,801,110,69,63,372,76,22,28,17,70,100,47,101,18,29,361,36,113,194,58,157,78,23,32,545,109,13,78,100,73,46,74,114,7,13,107,193,55,202,66,126,64,13,90,138,23,60,200,19,215,16,89,42,18,36,4,104,43,161,274,10,48,167,14,5,178,72,34,24,95,38,351,28,330,11,43,79,25,59,12,18,24,12,143,56,73,164,16,102,146,4,4,26,65,30,94,56,194,75,92,19,83,83,165,24,6,154,133,77,147,119,69,73,31,41,69,103,105,26,92,103,19,68,69,522,40,58,30,28,5,90,97,106,69,73,15,20,261,28,6,24,14,15,27,122,32,12,8,124,69,6,88,19,22,16,188,170,7,19,71,6,23,62,122,4,139,50,26,68,79,141,40,126,35,4,79,31,58,118,35,19,22,31,12,95,78,390,11,16,95,21,479,33,46,11,45,165,3,63,73,24,101,60,44,277,21,59,4,52,69,22,25,53,125,27,22,48,9,97,6,201,25,18,21,20,89,35,21,104,41,107,39,3,44,5,13,26,49,38,59,78,89,68,6,13,21,99,144,42,8,37,15,14,34,96,69,192,7,76,47,35,21,12,358,30,35,21,296,6,32,101,8,63,78,236,45,78,75,78,51,6,66,54,24,46,61,269,96,108,402,208,41,158,6,30,16,97,188,13,53,52,21,8,81,82,27,39,14,94,86,78,5,78,63,23,36,112,51,39,44,10,84,3,13,173,15,58,18,185,49,26,21,259,15,26,12,78,53,11,18,53,29,144,145,26,55,26,190,48,138,114,3,13,19,68,32,20,102,35,51,151,78,6,16,95,3,13,48,4,16,35,24,22,121,12,521,7,27,54,17,27,8,168,116,104,24,37,49,24,55,24,313,159,133,112,57,27,16,11,12,438,33,217,129,26,86,117,254,32,75,72,203,186,35,132,82,193,128,242,8,22,100,33,53,167,9,3,20,44,18,23,33,65,13,25,23,87,13,43,41,24,360,34,39,359,27,10,471,26,140,10,103,4,573,28,13,3,52,127,254,92,18,9,38,100,115,63,64,6,260,68,12,20,170,32,80,26,27,25,11,50,68,5,99,199,49,47,10,83,85,5,23,4,15,50,91,100,95,16,11,38,77,203,34,4,94,21,103,151,13,91,23,10,55,40,53,48,29,30,155,83,85,16,94,8,46,103,46,82,102,14,75,24,7,90,90,94,39,34,29,41,34,24,100,32,51,34,75,88,7,295,62,93,9,17,231,89,97,5,18,25,64,10,96,46,3,25,26,21,18,97,14,127,38,35,44,36,272,74,15,113,41,220,125,13,23,11,28,44,23,189,111,10,138,125,19,4,10,226,86,33,19,66,5,12,4,6,81,15,116,73,17,236,66,6,115,36,413,101,80,107,521,128,73,280,214,26,56,3,3,32,12,6,105,487,217,75,12,65,48,146,14,8,9,32,65,73,37,36,17,105,43,23,33,25,72,28,35,28,15,39,134,24,85,97,3,56,33,84,53,81,101,5,110,123,310,20,169,84,33,17,169,68,5,71,3,25,114,104,52,86,90,8,3,53,25,46,22,204,25,21,4,30,19,47,161,4,6,43,63,22,5,113,6,24,81,13,76,13,115,174,130,61,30,84,83,281,8,27,54,144,77,25,37,30,25,14,49,51,7,112,5,32,27,62,14,82,3,4,17,56,60,182,9,8,39,26,24,20,99,91,56,7,121,242,73,102,20,7,155,117,36,70,150,132,4,97,71,226,9,16,28,165,40,49,135,151,29,118,157,36,160,30,67,19,53,660,67,159,65,100,17,38,91,67,32,76,44,33,20,35,22,16,9,70,15,58,12,12,30,8,22,531,32,43,51,68,91,9,42,12,74,21,33,288,124,136,151,373,161,6,237,23,1743,68,3,113,211,582,26,50,98,6,27,35,30,34,332,25,153,50,31,23,11,73,11,14,21,75,120,62,16,137,4,56,204,12,641,546,83,100,40,9,49,28,20,74,168,32,168,4,105,79,44,129,45,185,26,177,26,87,78,62,87,105,50,30,10,6,103,23,120,207,40,41,59,3,51,111,173,83,18,48,101,9,8,7,61,24,6,172,63,148,25,25,10,138,57,110,99,24,104,72,8,77,236,4,85,17,195,274,190,4,38,4,10,6,17,81,19,26,10,73,335,122,100,49,132,74,70,6,4,130,54,83,49,17,39,34,33,164,22,407,9,19,131,32,12,45,64,26,40,26,9,39,92,55,4,6,10,7,5,330,5,26,70,23,32,54,57,26,14,18,142,50,4,93,165,45,8,32,41,21,100,10,23,52,94,48,42,9,29,19,17,10,226,72,4,83,14,28,160,4,76,170,54,26,57,32,43,62,40,3,83,138,29,20,46,51,103,86,79,17,121,8,185,28,19,5,29,128,68,10,55,166,3,19,62,15,64,17,263,64,210,381,68,58,78,3,4,37,44,328,231,19,34,110,27,21,34,15,39,4,119,162,67,42,9,4,77,20,12,54,129,5,73,26,116,37,18,163,820,228,83,96,14,21,101,3,26,34,73,42,53,394,55,490,106,40,148,24,302,8,24,17,49,37,6,58,115,15,45,22,88,13,3,110,31,163,42,13,68,165,15,53,100,21,47,17,194,49,73,222,43,41,49,9,48,25,157,46,767,20,63,23,9,86,57,99,24,82,49,26,86,108,43,57,57,17,103,63,25,82,45,29,29,124,41,68,50,100,21,8,6,87,9,59,50,8,17,40,28,5,28,14,13,9,5,93,196,9,53,72,183,30,65,59,80,144,299,21,5,37,118,9,59,23,18,60,365,63,96,102,44,202,12,149,7,131,267,91,71,6,58,28,11,100,37,10,27,19,27,6,5,16,11,48,124,108,63,130,23,15,121,82,27,46,15,19,19,23,24,166,11,804,6,22,65,33,19,3,44,53,5,18,49,13,111,50,85,83,367,79,62,44,150,16,728,75,23,144,66,49,45,35,126,31,63,75,11,34,20,90,38,1385,19,3,55,31,185,16,114,40,44,96,43,71,82,41,3,103,73,21,8,39,61,358,121,304,156,63,61,78,3,31,8,65,241,89,201,35,58,17,27,37,13,5,289,70,244,18,5,5,4,100,25,152,173,46,18,49,54,144,77,19,201,32,20,4,74,28,30,17,11,63,47,88,29,60,317,4,6,39,93,61,29,23,171,9,15,80,23,105,47,36,21,114,113,50,141,7,63,7,91,62,51,9,26,14,17,32,64,3,21,168,40,37,7,350,13,167,157,35,31,35,147,18,94,45,55,10,76,55,199,32,101,33,58,4,136,54,346,48,71,19,48,34,81,20,90,39,107,23,320,17,101,36,11,254,13,64,3,47,195,6,32,84,47,34,192,105,130,23,170,43,46,40,16,73,19,124,16,14,90,3,72,97,148,22,23,7,17,20,7,34,161,24,6,55,33,30,11,363,97,194,117,12,11,23,79,38,34,26,135,7,21,21,4,123,69,152,4,22,21,19,70,113,85,39,34,29,50,213,32,69,31,231,64,225,100,12,11,29,25,117,72,123,4,49,23,28,106,40,46,73,64,48,52,29,43,291,25,62,19,18,3,9,137,59,10,57,296,115,204,27,169,15,9,29,49,54,30,166,185,40,11,33,63,67,14,73,83,147,18,92,4,95,17,44,75,4,10,122,44,20,56,48,31,71,26,382,26,24,45,67,5,24,80,36,47,56,31,65,12,90,23,62,75,28,49,97,70,37,89,48,16,35,63,234,73,84,33,177,6,149,17,51,174,143,16,80,34,36,162,186,97,59,44,55,3,52,57,12,87,96,723,41,113,7,77,163,804,250,32,13,368,37,37,30,24,12,58,154,158,7,295,125,188,46,15,74,30,54,32,72,109,31,102,6,126,150,81,57,34,5,27,40,90,82,360,18,42,4,30,56,32,10,24,6,16,7,8,3,91,42,165,24,5,17,50,71,90,151,45,16,50,6,236,88,156,23,34,64,123,38,7,12,19,62,94,117,227,18,88,17,132,28,77,21,8,53,75,249,152,5,33,26,213,79,197,248,121,279,3,179,22,12,213,130,4,4,16,44,26,4,17,43,7,26,51,145,171,39,189,31,43,22,18,6,18,68,55,87,222,22,6,275,115,215,103,9,123,160,62,57,100,69,120,38,165,32,14,19,10,149,61,10,151,10,28,131,59,51,16,59,299,75,29,76,25,10,22,39,263,474,11,15,49,37,121,23,96,37,9,20,98,10,3,9,20,334,133,185,27,22,24,127,25,118,34,34,91,24,51,11,139,93,20,16,18,55,38,84,64,18,41,33,21,68,51,4,17,7,64,29,879,95,112,53,3,16,19,7,23,9,14,45,89,32,26,36,12,336,24,70,100,306,31,13,172,30,53,151,85,110,128,24,156,230,72,9,46,21,54,76,11,13,19,15,10,229,154,24,226,11,4,60,51,102,520,9,20,9,260,64,112,489,11,14,230,43,5,73,206,56,49,96,105,371,73,117,21,22,8,38,172,17,15,11,28,61,214,36,149,3,223,361,19,29,19,115,91,22,12,64,60,102,38,64,104,7,75,22,120,140,100,34,19,134,18,27,27,39,236,29,68,25,32,136,106,15,47,77,65,43,38,117,72,52,23,23,33,3,30,49,6,5,7,94,35,94,29,6,73,3,106,146,3,8,90,80,226,73,28,153,111,70,61,10,109,117,47,23,17,37,20,5,158,15,115,292,122,34,55,86,77,12,6,52,51,24,30,69,151,33,18,29,57,48,24,9,4,44,36,28,15,133,63,21,78,133,36,13,51,51,5,26,65,14,24,56,8,39,22,5,80,30,31,49,6,63,40,5,47,114,73,9,42,35,45,28,17,226,474,125,22,15,179,23,28,68,119,6,23,41,14,47,24,26,6,259,62,69,41,143,15,20,20,75,196,59,37,76,13,57,67,104,165,17,13,74,173,116,122,14,57,90,5,18,26,21,23,22,42,4,4,22,282,94,32,98,9,19,68,18,134,69,22,104,104,82,86,79,55,64,13,6,333,385,21,79,26,133,5,34,451,144,3,5,37,46,79,57,10,15,13,165,134,38,44,31,144,60,3,108,146,49,7,47,148,248,104,13,70,13,484,156,61,42,51,19,122,474,46,38,84,39,26,35,24,96,18,25,21,109,72,3,28,12,95,214,91,112,293,20,539,45,40,52,67,23,72,26,20,19,29,91,112,31,40,11,32,15,3,47,75,37,33,21,10,83,76,83,41,67,38,22,17,73,173,72,63,134,53,24,146,40,21,265,35,188,53,163,25,40,25,61,35,34,12,88,174,36,35,22,31,25,145,27,13,42,139,34,37,78,53,65,142,23,56,60,186,32,78,35,18,102,27,286,103,165,34,64,104,14,210,57,59,9,86,39,13,67,16,99,3,3,51,44,133,11,40,72,185,103,5,16,9,21,136,490,26,9,61,50,47,210,134,47,20,397,62,72,31,43,103,22,18,31,164,42,55,50,16,10,65,24,50,51,62,7,47,151,254,20,129,115,26,53,88,49,17,34,50,23,4,14,194,19,238,133,341,78,58,19,222,174,235,11,15,51,89,22,15,144,7,32,19,17,88,284,117,61,575,88,23,54,27,15,13,280,19,27,112,84,40,5,87,150,151,23,13,20,102,46,37,102,77,25,246,6,13,52,69,3,94,29,4,25,154,79,8,42,21,15,52,12,63,97,68,55,83,137,24,49,18,177,150,14,45,3,33,17,40,7,89,14,27,14,24,17,42,237,174,65,9,59,81,91,79,94,77,209,29,159,68,59,7,89,229,58,47,160,34,33,4,98,46,33,5,16,23,11,30,15,17,19,67,33,18,48,9,60,11,16,66,79,68,61,321,37,99,294,161,51,59,66,92,50,434,35,52,9,98,33,4,80,69,69,79,9,78,18,6,481,24,36,109,4,38,92,96,24,60,221,494,12,31,33,40,22,99,7,125,41,74,6,23,22,562,21,71,39,55,131,69,10,26,23,39,12,3,147,5,40,144,5,57,80,31,15,47,73,336,46,282,3,86,86,584,17,115,131,145,47,34,52,63,15,59,90,36,99,3,294,28,125,72,23,27,10,45,140,27,52,4,40,16,21,158,28,7,10,24,24,46,57,42,19,8,44,534,26,176,53,127,41,26,39,5,121,39,30,11,27,3,92,71,23,59,13,18,26,341,666,32,40,15,223,13,34,14,17,42,16,33,3,12,22,92,127,92,4,13,91,178,5,21,54,110,23,703,14,27,254,93,13,59,19,14,129,36,229,31,93,35,182,86,49,42,146,46,6,13,109,23,55,5,373,71,13,85,32,334,18,6,83,83,81,16,151,29,3,35,78,14,45,25,3,153,43,32,78,22,116,685,12,18,64,401,13,32,126,62,108,126,11,31,12,6,219,4,137,85,12,51,118,6,16,71,10,11,33,46,4,4,4,35,24,39,22,112,144,27,40,210,160,100,50,181,7,161,25,56,80,32,11,95,144,163,4,50,48,111,22,100,27,33,56,71,30,32,15,42,6,16,62,46,72,89,13,26,76,9,33,94,35,86,17,69,3,49,17,61,318,13,62,192,11,24,6,16,26,30,282,21,29,86,41,14,38,112,38,95,5,101,31,28,36,21,42,204,73,20,60,43,20,388,69,7,39,38,54,214,13,8,23,135,28,234,7,28,49,7,13,110,10,32,78,119,4,100,4,23,54,374,69,109,137,65,18,121,70,33,13,53,187,152,52,23,15,18,20,103,58,157,168,28,14,69,79,7,17,84,55,9,1425,117,16,35,44,24,79,946,185,40,103,20,28,38,22,22,134,25,56,3,185,22,38,22,4,148,29,5,184,54,112,96,93,5,106,32,60,239,128,69,8,16,323,96,431,19,21,62,49,24,99,17,78,69,168,61,111,283,31,70,40,39,37,54,115,188,62,71,38,10,38,17,21,8,76,7,17,10,262,103,39,55,68,24,7,50,38,243,19,64,38,57,49,3,10,33,201,569,68,159,25,397,28,64,16,100,19,13,71,24,31,17,300,6,6,10,10,19,97,197,11,12,129,61,22,189,68,16,61,5,12,103,70,114,289,58,47,12,146,82,24,324,181,22,39,202,205,13,652,39,45,27,175,10,87,58,17,166,82,46,154,54,34,144,60,15,48,32,243,61,13,95,19,11,5,27,25,29,36,17,20,42,56,57,33,23,19,16,31,12,18,33,97,212,15,5,39,21,302,214,31,27,14,16,7,87,5,60,84,114,8,14,75,311,8,26,47,15,16,69,22,57,1546,13,37,89,59,92,29,274,90,121,284,39,24,56,83,38,205,20,23,4,102,187,11,14,45,11,268,350,14,81,69,84,66,4,3,13,35,21,84,75,61,53,47,24,149,110,79,75,14,6,16,4,68,98,22,97,15,5,42,36,27,145,33,3,179,173,127,10,42,17,30,38,7,70,19,634,37,17,122,105,22,27,23,111,96,136,34,75,66,9,580,104,67,4,38,8,49,63,63,100,22,63,13,8,19,3,27,103,171,137,86,41,73,16,10,7,89,127,3,11,20,18,29,15,13,65,121,35,99,7,5,30,58,104,16,12,25,98,94,18,33,59,25,63,112,45,48,55,42,126,47,135,129,59,86,58,57,54,72,89,13,33,79,148,60,332,114,79,38,322,27,85,71,67,7,251,34,34,127,189,35,21,37,35,19,118,97,175,28,93,162,383,47,14,244,64,86,29,13,15,44,50,25,27,190,20,71,49,341,49,66,98,136,42,61,18,41,836,104,32,60,23,139,116,82,414,59,40,12,74,49,317,20,104,40,1069,37,80,101,13,520,13,10,60,75,75,23,101,20,3,66,16,13,161,5,24,48,5,311,27,16,43,31,45,44,33,52,92,23,224,13,103,77,111,56,37,21,6,8,110,35,30,36,266,20,109,136,329,301,130,52,14,3,34,30,157,28,24,42,71,16,60,12,7,9,845,83,35,97,28,5,42,212,5,146,4,96,105,50,60,29,21,111,5,315,74,347,67,104,3,411,27,69,20,51,30,56,243,438,15,3,3,4,34,27,44,7,87,43,23,22,28,15,187,13,8,5,8,7,11,58,21,59,125,143,31,381,23,397,127,15,24,4,114,98,162,63,63,85,197,37,38,10,38,24,28,18,32,79,13,288,165,139,68,314,68,14,279,75,140,3,74,3,16,94,3,91,128,71,39,56,15,12,21,43,33,13,358,36,13,91,28,3,64,3,6,17,157,34,106,84,382,32,80,65,107,114,7,58,51,6,46,85,40,20,127,69,128,93,244,205,5,49,5,12,88,20,109,22,92,81,6,10,39,181,28,180,65,8,77,57,179,109,65,16,190,121,8,22,93,74,141,498,59,13,53,9,27,17,90,14,47,38,49,150,12,22,81,43,17,100,23,224,26,117,146,172,55,26,358,51,114,103,112,63,17,51,166,17,28,65,114,106,16,58,122,48,88,63,6,45,62,195,131,919,60,7,3,76,19,39,90,146,10,96,133,17,94,127,42,66,22,95,197,10,36,125,54,63,35,63,92,95,43,50,95,19,53,85,11,149,76,58,55,27,20,181,71,52,12,275,49,49,3,12,31,12,27,251,12,10,176,119,8,121,66,158,3,19,98,23,107,77,22,210,26,190,11,56,34,261,12,24,66,35,33,45,156,42,57,26,17,106,32,50,18,15,8,45,20,46,35,6,48,92,23,76,65,29,19,143,61,8,100,56,107,197,65,20,20,11,60,9,85,67,47,76,69,42,13,86,106,47,151,12,166,4,19,72,32,57,36,17,121,3,102,10,101,10,120,16,100,31,27,93,26,35,262,289,128,19,84,170,155,46,50,12,93,39,70,55,13,8,59,12,14,102,9,333,36,101,61,29,25,23,3,60,77,42,54,83,13,333,79,78,101,16,38,161,176,121,51,680,4,85,71,37,19,268,26,58,40,34,61,227,27,46,18,32,63,126,96,6,86,69,45,53,68,138,75,42,33,43,17,83,66,101,33,259,83,62,44,29,17,81,24,205,51,62,26,13,199,3,28,43,124,37,17,35,58,83,16,164,45,26,9,13,209,32,23,154,76,130,67,194,288,23,52,41,204,7,3,14,41,123,22,74,43,38,62,6,9,556,133,144,12,245,128,111,5,27,192,52,37,24,118,3,18,91,27,175,100,80,131,1913,12,8,103,68,47,74,26,18,198,66,313,38,91,116,56,25,130,6,18,41,42,37,189,28,43,119,3,28,12,12,21,28,113,127,6,16,196,13,12,6,38,96,132,42,6,22,17,129,13,27,54,79,103,53,79,291,38,31,69,71,39,49,169,65,20,317,18,360,71,40,8,81,149,193,91,18,28,73,30,57,105,165,88,47,60,134,15,329,92,60,3,24,79,16,79,38,81,61,126,18,24,5,65,143,29,111,127,209,50,17,46,159,23,22,43,143,162,43,97,11,21,66,65,6,213,80,46,292,42,32,70,28,37,27,61,22,17,100,37,29,138,36,221,74,14,44,33,48,5,32,124,39,11,22,46,13,7,53,101,109,17,102,17,41,163,7,66,31,26,180,32,4,29,50,103,4,37,49,24,61,59,7,115,32,102,45,92,21,25,201,105,38,174,29,235,17,121,209,55,167,48,49,105,18,35,105,10,42,23,96,6,5,103,63,186,75,81,57,37,166,3,72,23,72,80,65,125,13,47,182,61,33,19,192,99,3,82,121,63,55,55,26,121,57,141,97,10,19,18,43,82,27,93,97,66,10,86,19,16,17,70,53,45,4,67,75,17,155,58,165,3,14,158,6,56,24,42,43,42,225,18,74,320,6,31,24,91,136,66,133,4,29,137,28,19,21,34,6,149,92,173,52,35,56,44,7,49,34,255,110,97,20,115,136,144,4,114,331,3,55,13,56,17,17,277,103,62,138,72,15,3,111,84,125,23,35,43,247,3,168,185,48,36,5,59,13,21,47,60,54,22,73,224,148,5,136,86,26,224,103,19,293,91,51,65,141,11,99,109,111,81,173,104,17,20,183,22,66,117,23,43,78,3,153,494,12,111,236,18,19,61,21,77,9,167,7,19,21,13,21,115,37,17,19,456,75,91,71,22,21,23,17,38,14,35,72,57,47,446,108,21,298,48,69,23,110,415,51,120,23,278,85,31,42,197,61,44,62,108,48,17,104,58,35,3,45,69,8,166,12,84,35,5,45,88,48,32,4,50,88,26,53,87,51,13,72,116,155,56,89,14,549,27,24,101,121,206,573,14,25,38,42,36,50,57,11,140,70,32,53,96,26,3,125,140,25,72,35,36,36,9,18,448,23,45,89,91,40,334,22,85,138,186,348,36,43,161,57,197,169,34,186,33,39,48,520,43,82,10,46,8,50,95,57,5,126,30,220,13,54,80,20,79,20,1248,58,42,61,20,172,49,68,28,31,145,110,78,3,53,126,76,28,107,39,34,80,42,108,38,58,80,23,63,112,37,4,32,17,30,190,35,362,432,21,9,227,19,84,122,228,18,3,16,14,127,46,51,7,92,103,115,26,74,16,409,57,72,109,87,37,44,75,3,62,102,15,67,11,30,23,58,26,86,16,17,8,11,112,81,201,19,73,20,33,19,41,38,48,162,25,29,7,11,30,364,40,366,10,25,18,13,131,122,77,100,5,228,82,17,26,33,96,47,71,51,95,176,205,12,41,5,20,24,82,13,74,5,156,54,93,35,20,47,127,35,52,37,21,8,10,45,124,18,5,31,44,20,20,86,97,16,57,534,47,25,4,19,92,31,99,96,136,70,228,214,3,95,175,41,50,267,116,6,15,89,181,63,34,123,21,79,11,536,9,4,27,19,55,26,5,164,44,46,16,80,58,10,65,100,17,62,48,10,89,211,57,43,93,219,235,27,76,13,4,22,97,66,109,31,27,119,6,105,43,149,63,181,84,59,53,143,6,27,30,71,4,31,67,48,33,44,37,5,179,12,11,62,61,30,334,7,62,25,276,3,46,23,119,118,10,28,242,129,46,163,52,275,83,130,55,170,16,104,45,3,27,62,13,56,19,35,504,41,102,36,26,20,30,64,10,96,24,11,29,22,43,62,577,13,20,30,23,5,29,6,301,108,39,226,23,20,26,80,106,119,21,5,10,142,11,82,61,19,43,26,56,4,213,13,43,10,44,85,85,153,117,23,124,12,52,39,22,834,61,259,7,180,21,12,105,43,3,37,117,29,22,194,9,169,63,12,113,215,36,16,78,68,156,92,108,22,66,135,54,9,31,21,345,28,177,175,57,95,28,13,99,106,36,65,26,84,30,5,73,16,178,793,15,19,78,25,25,113,72,8,14,66,87,70,141,57,10,31,12,145,30,110,9,51,88,307,41,105,5,59,27,25,17,37,92,90,90,122,87,18,54,101,109,235,147,202,67,6,21,31,15,68,17,7,8,75,66,14,58,47,396,7,20,95,74,51,27,58,45,81,5,48,17,40,103,391,78,50,21,185,141,31,35,203,35,55,93,11,70,19,3,59,192,70,61,93,63,195,115,61,14,50,20,53,148,197,7,126,54,83,31,94,267,16,20,15,145,125,280,14,63,3,37,110,19,3,176,24,14,52,18,282,11,67,4,16,66,13,4,44,89,106,27,24,32,15,53,29,6,53,149,3,3,24,58,391,216,14,168,25,90,20,1373,3,122,15,27,38,43,85,124,3,43,20,74,15,19,101,281,40,12,49,45,10,11,19,5,76,5,84,22,8,66,75,15,43,6,34,8,15,3,72,7,103,160,38,109,50,70,21,33,11,300,18,25,5,14,34,187,75,140,90,135,50,162,13,15,28,40,54,70,3,87,39,76,153,7,190,42,18,65,71,3,67,139,199,5,299,26,28,17,169,5,27,200,16,13,52,18,25,154,10,4,8,119,50,39,17,14,188,21,21,33,99,100,315,70,49,265,155,7,75,12,4,152,127,4,164,66,49,519,18,47,55,21,67,133,62,189,8,46,13,91,85,48,123,18,94,41,14,35,59,43,27,302,73,141,25,78,31,58,26,80,32,66,4,76,53,15,3,56,40,8,116,83,186,50,25,23,51,18,87,214,39,20,85,76,69,21,45,13,15,13,160,20,52,160,7,14,24,50,263,5,70,15,65,1250,34,44,3,14,140,39,8,54,35,22,162,206,69,25,203,5,108,144,59,16,4,76,225,25,98,37,143,224,33,37,58,4,6,14,54,93,8,82,8,79,133,45,115,294,37,13,3,121,3,140,46,45,21,134,114,18,29,464,79,43,93,217,19,12,93,71,4,96,9,10,13,84,95,32,138,38,15,36,42,6,127,46,205,57,76,50,187,82,18,15,30,199,111,34,41,6,73,170,46,140,5,60,113,99,82,33,14,30,29,60,95,40,147,41,21,118,84,71,28,82,3,10,44,61,22,109,3,38,7,173,35,56,42,15,62,11,35,28,85,158,4,173,12,5,22,273,13,6,12,70,78,199,145,62,72,23,23,6,171,70,29,32,11,31,29,23,40,27,90,13,17,21,63,54,22,5,83,171,58,102,28,309,20,22,58,28,150,164,57,48,6,31,10,5,136,51,93,103,229,30,84,8,19,23,82,102,6,75,29,7,39,39,104,119,35,124,29,93,196,293,15,21,7,123,12,11,14,108,45,144,48,17,51,31,109,67,36,17,126,49,14,87,80,274,25,68,40,58,53,57,20,53,18,28,8,33,251,69,9,83,67,99,14,226,109,74,30,42,80,29,97,77,23,70,3,23,53,9,152,48,134,22,13,19,4,24,70,187,11,61,17,27,285,17,26,83,18,25,94,5,239,44,28,148,40,57,38,82,6,13,103,46,12,190,127,58,5,25,19,22,31,13,89,101,39,17,470,212,111,6,191,59,141,54,36,3,59,3,149,22,27,69,18,21,4,175,12,51,66,12,17,95,119,16,149,58,3,701,94,187,96,23,16,39,126,12,65,10,76,64,262,109,107,17,39,18,26,94,17,95,26,26,6,114,14,51,20,7,5,95,41,23,5,189,55,84,11,23,75,249,19,3,190,19,139,89,79,10,26,9,3,20,74,21,25,79,73,26,137,270,69,16,115,429,72,27,141,22,3,5,19,154,27,92,116,83,15,56,131,48,519,13,22,123,3,8,17,149,53,4,127,25,277,139,51,134,240,8,25,23,79,458,37,111,220,38,66,32,44,38,40,5,44,4,97,120,21,11,3,10,10,25,19,28,47,83,4,60,21,517,155,12,123,80,49,30,162,25,26,82,150,89,6,110,3,399,78,48,6,35,5,7,4,47,79,72,28,6,80,19,19,146,26,149,20,115,786,269,45,72,31,15,77,17,89,57,152,54,83,71,77,4,238,61,4,30,30,10,135,29,67,73,120,134,65,235,96,157,89,41,33,16,55,104,39,12,105,22,10,76,172,22,29,66,35,27,10,5,270,14,15,91,16,161,19,114,51,61,81,7,3,53,108,47,14,43,135,94,20,48,88,71,43,12,57,13,142,20,43,154,28,1618,25,140,78,5,15,16,74,160,9,17,24,6,134,6,25,19,47,29,86,23,39,27,34,113,30,34,9,26,52,102,88,18,4,72,19,89,62,11,155,19,27,15,121,58,14,79,12,43,13,89,22,98,208,20,43,49,75,145,73,71,8,62,11,62,21,113,85,96,17,113,134,22,82,11,43,67,91,44,15,129,69,74,3,26,9,161,109,926,46,24,81,31,254,46,37,106,88,27,54,108,17,18,54,27,157,34,49,10,93,34,48,3,87,10,16,82,49,170,20,96,101,34,158,46,87,55,158,54,70,70,47,12,29,81,25,22,303,17,281,4,6,16,6,286,3,11,9,6,22,87,12,34,144,94,27,4,4,37,133,134,46,267,206,37,16,6,65,17,26,247,32,68,52,49,29,43,21,91,5,169,17,29,38,58,8,95,57,6,65,23,128,108,579,78,30,200,409,426,9,72,17,15,53,41,113,39,146,19,55,57,64,74,47,30,56,36,23,6,177,16,122,107,27,489,23,51,33,87,14,230,19,4,92,168,37,41,75,24,20,93,11,16,139,4,97,55,61,394,64,24,42,11,319,21,191,28,25,110,24,88,5,8,57,4,28,73,50,7,38,55,25,63,100,35,94,115,102,129,102,24,52,55,27,104,6,46,128,85,853,47,172,757,9,407,52,25,35,15,77,8,127,17,157,32,13,63,114,118,30,157,66,81,28,50,39,72,17,66,54,151,22,32,82,54,34,89,60,136,849,128,115,188,65,158,174,60,79,31,40,172,116,104,33,26,32,119,21,18,89,12,47,202,13,4,26,13,45,22,12,95,10,38,112,26,12,18,14,71,38,23,69,77,35,10,19,37,35,11,37,43,26,26,167,67,55,9,14,57,44,10,176,35,3,4,65,26,110,41,42,105,59,63,55,19,5,70,48,132,220,96,128,8,75,116,194,5,10,29,26,23,6,16,53,66,74,29,116,50,25,165,91,14,31,15,24,48,57,172,15,14,76,19,14,14,85,35,73,22,180,103,34,129,90,41,20,34,76,21,34,10,29,21,67,148,85,65,17,58,144,89,123,27,39,188,33,129,608,55,43,22,30,25,70,57,66,57,12,124,30,224,93,159,111,60,19,145,25,55,26,28,28,23,22,93,48,412,32,1054,15,94,93,108,12,135,73,246,31,27,49,15,32,193,93,58,128,15,259,66,18,59,159,119,31,3,87,108,3,42,4,8,88,18,41,77,166,3,221,3,45,51,169,72,22,108,58,249,116,12,12,52,4,25,17,81,21,18,83,19,5,37,56,8,28,84,9,31,5,3,11,8,11,29,100,7,18,75,4,19,102,140,4,67,7,143,122,120,19,79,26,248,101,29,54,28,28,27,5,64,26,132,16,47,27,4,50,28,41,18,4,31,86,6,80,49,92,27,4,71,51,165,99,5,19,118,60,49,28,105,59,42,5,34,178,102,80,26,206,98,79,64,201,15,7,74,102,18,90,6,63,16,452,126,24,23,199,76,5,29,13,101,13,6,48,9,115,33,451,12,5,119,3,25,53,22,10,36,58,21,63,61,89,37,16,51,148,97,76,58,103,40,112,14,39,19,51,22,63,41,39,19,54,321,113,18,3,75,81,65,185,31,26,97,8,19,178,96,18,41,23,12,51,92,25,22,24,74,119,101,44,21,36,74,149,208,19,17,6,23,105,151,401,18,108,53,8,102,3,58,612,186,14,4,85,24,190,21,17,38,5,83,81,288,47,15,26,125,76,70,42,23,9,159,21,4,280,18,57,38,57,84,6,41,40,194,3,20,42,61,65,38,9,22,73,59,179,86,43,3,169,6,65,21,6,19,246,19,97,29,54,16,143,14,3,16,74,48,29,3,51,158,71,177,57,62,5,86,41,18,41,122,164,114,190,51,35,7,115,21,28,30,109,50,188,501,18,64,151,94,87,217,29,3,24,91,20,60,67,26,35,54,21,9,88,41,4,36,3,88,11,37,3,128,22,103,23,810,43,76,23,33,37,52,124,15,32,123,10,107,28,40,212,215,56,38,61,4,118,15,98,146,63,216,11,138,30,273,9,9,9,257,6,59,204,15,9,58,26,7,10,172,60,73,47,7,71,99,65,3,73,172,35,324,75,68,21,96,30,23,49,90,7,18,68,64,188,47,50,125,36,9,28,151,21,29,112,58,78,24,15,145,50,9,82,162,13,163,130,47,48,15,179,260,39,54,37,138,4,29,7,14,23,27,103,8,11,5,127,17,61,18,22,18,3,39,19,176,31,31,93,8,17,36,55,111,5,117,158,16,26,82,18,94,6,82,14,27,66,665,8,688,37,7,73,13,34,22,86,36,97,24,38,57,111,25,43,63,177,59,16,29,796,85,94,95,22,246,7,17,21,26,457,98,12,77,121,98,7,27,14,36,53,12,57,3,33,197,30,61,17,22,26,34,607,490,34,166,15,83,53,24,140,16,21,28,31,8,65,78,64,93,10,852,17,20,102,13,58,6,4,18,58,84,172,112,19,124,59,125,63,397,110,71,9,28,28,55,3,29,13,43,68,11,20,86,19,3,144,311,90,106,58,209,58,131,76,32,669,47,11,39,84,18,63,73,72,31,168,27,395,264,48,11,24,100,79,103,12,223,31,49,479,90,15,169,20,36,69,46,7,50,75,5,122,50,32,3,226,113,406,19,44,49,267,40,28,55,172,104,58,31,50,80,71,40,38,37,172,37,33,44,62,106,36,154,63,39,6,6,42,6,30,23,13,22,26,38,37,70,72,6,23,60,15,74,3,96,3,54,47,100,73,53,33,51,17,10,28,218,60,7,243,132,19,151,14,6,65,136,20,43,210,41,37,20,277,14,5,50,10,85,49,127,15,5,139,84,28,29,49,35,7,144,10,50,76,20,188,216,139,9,8,88,357,848,56,81,76,67,2152,122,324,15,173,504,23,23,97,92,30,3,25,70,45,88,128,23,153,81,1884,559,77,55,91,39,26,3,57,63,186,20,9,97,68,9,45,66,10,316,58,10,12,27,113,71,9,28,107,7,101,29,116,49,109,35,28,37,17,11,86,20,22,24,93,28,11,59,26,164,10,24,81,246,26,36,62,158,29,125,32,24,29,36,68,162,26,15,346,15,251,396,40,130,83,4,103,111,8,36,56,98,19,5,17,302,81,31,57,29,6,120,38,8,19,22,13,216,21,166,8,18,169,16,87,109,177,40,29,9,19,94,86,275,83,3,78,10,27,34,10,26,35,40,25,11,11,30,119,35,38,95,124,60,67,138,36,33,24,17,59,85,208,69,17,40,26,242,23,64,38,5,56,61,8,64,19,20,90,10,53,16,25,101,73,74,39,5,119,187,41,61,85,74,92,162,223,79,44,21,58,32,29,195,8,29,125,18,53,82,77,193,67,9,92,87,8,219,6,7,59,15,3,103,4,45,100,116,61,11,56,14,33,137,43,108,10,4,58,85,9,124,41,26,36,124,45,9,69,104,126,140,51,11,63,208,10,119,707,646,31,87,60,11,35,83,214,188,186,31,17,27,13,16,333,18,95,23,138,10,3,12,27,84,3,7,23,15,62,9,62,25,160,12,94,73,5,52,5,226,68,31,17,233,101,43,22,9,21,80,385,6,48,29,55,13,182,5,46,85,22,18,140,19,26,8,49,158,87,95,4,111,17,33,29,16,3,175,98,52,21,30,27,336,28,294,11,223,34,5,5,29,29,19,33,119,36,20,9,62,14,108,10,129,4,10,156,73,252,57,7,70,23,25,11,43,46,14,84,68,43,84,322,12,37,85,310,35,18,5,63,14,27,116,300,19,154,203,20,10,253,127,4,173,20,94,34,17,15,73,421,69,101,11,77,16,27,28,18,34,154,3,263,10,84,61,140,19,22,55,5,38,13,38,3,122,37,160,7,59,16,44,75,87,99,274,183,37,136,14,31,19,45,44,18,110,46,25,63,13,14,65,23,61,17,68,18,21,52,545,169,4,35,9,81,5,50,88,11,97,17,48,71,115,61,3,4,45,8,21,144,77,9,32,24,71,429,38,14,314,37,48,537,33,17,67,103,61,44,89,55,9,39,169,52,172,10,93,41,6,86,23,4,17,23,23,11,196,53,3,5,235,6,20,20,412,78,28,43,23,66,37,25,132,135,60,277,116],\"type\":\"histogram\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"title\":{\"text\":\"Histogram of Token Length of Question and Answer.\"},\"xaxis\":{\"title\":{\"text\":\"Values\"}},\"yaxis\":{\"title\":{\"text\":\"Count\"}},\"barmode\":\"overlay\",\"bargap\":0.1,\"bargroupgap\":0.2},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('83b7f236-3a6c-42ab-be94-a3b420f37417');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };                });            </script>        </div>"},"metadata":{}}]},{"cell_type":"code","source":"# Filtering dataset based on token length\nupper_limit = 500\nlower_limit = 10\n\ndataset = dataset.filter(lambda row: \n    (lower_limit < row[\"question_token_length\"] < upper_limit) and (lower_limit < row[\"answer_token_length\"] < upper_limit)\n)\n\ndataset","metadata":{"execution":{"iopub.status.busy":"2024-09-29T10:41:58.177383Z","iopub.execute_input":"2024-09-29T10:41:58.178512Z","iopub.status.idle":"2024-09-29T10:41:58.491422Z","shell.execute_reply.started":"2024-09-29T10:41:58.178442Z","shell.execute_reply":"2024-09-29T10:41:58.489987Z"},"trusted":true},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":"Filter:   0%|          | 0/10400 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"080f4b2314ef4a0d95367d095a998b96"}},"metadata":{}},{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['question', 'context', 'answer', 'category', 'question_token_length', 'answer_token_length'],\n    num_rows: 6068\n})"},"metadata":{}}]},{"cell_type":"code","source":"# Sampling dataset\nsample_size = 100 # None\nif sample_size:\n    dataset = dataset.select(range(sample_size))\n    \n\n# Add a primary key column\ndef add_primary_key(example, idx):\n    example['primary_key'] = idx\n    return example\n\ndataset = dataset.map(add_primary_key, with_indices=True)\ndataset","metadata":{"execution":{"iopub.status.busy":"2024-09-29T10:41:58.575798Z","iopub.execute_input":"2024-09-29T10:41:58.576275Z","iopub.status.idle":"2024-09-29T10:41:58.626436Z","shell.execute_reply.started":"2024-09-29T10:41:58.576229Z","shell.execute_reply":"2024-09-29T10:41:58.625162Z"},"trusted":true},"execution_count":19,"outputs":[{"output_type":"display_data","data":{"text/plain":"Map:   0%|          | 0/5 [00:00<?, ? examples/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"8ab919c239044e8abe3a6096975ec00c"}},"metadata":{}},{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"Dataset({\n    features: ['question', 'context', 'answer', 'category', 'question_token_length', 'answer_token_length', 'primary_key'],\n    num_rows: 5\n})"},"metadata":{}}]},{"cell_type":"markdown","source":"## Text Pre-Processing Functions","metadata":{}},{"cell_type":"code","source":"def convert_numbers(text, lang='en'):\n    \"\"\"\n    Converts numbers to words. The language can be customized.\n    \"\"\"\n    def replace_numbers(match):\n        number = match.group(0)\n        return \" \" + num2words(int(number), lang=lang) + \" \"\n    \n    text = re.sub(r'\\d+', replace_numbers, text)\n    return text\n\ndef create_folder(folder_name):\n    current_dir = os.getcwd()\n    folder_path = os.path.join(current_dir, folder_name)\n    \n    if not os.path.exists(folder_path):\n        os.makedirs(folder_path)\n        print(f\"Folder '{folder_path}' created.\")\n    else:\n        print(f\"Folder '{folder_path}' already exists.\")\n    return folder_path\n\ndef convert_date_time_to_words(date_str=None, time_str=None):\n    inf_engine = inflect.engine()\n    result = []\n    \n    # Convert date into words if date_str is provided\n    if date_str:\n        try:\n            date_obj = datetime.strptime(date_str, \"%Y-%m-%d\")\n            year_in_words = inf_engine.number_to_words(date_obj.year)\n            month_in_words = date_obj.strftime(\"%B\")\n            day_in_words = inf_engine.number_to_words(date_obj.day)\n            result.append(f\"{day_in_words} of {month_in_words}, {year_in_words}\")\n        except ValueError:\n            logger.warning(f\"Error in convert_date_time_to_words - date_str: {date_str}\")\n\n    # Convert time into words if time_str is provided\n    if time_str:\n        try:\n            time_obj = datetime.strptime(time_str, \"%H:%M\")\n            hours_in_words = inf_engine.number_to_words(time_obj.hour)\n            minutes_in_words = inf_engine.number_to_words(time_obj.minute)\n            result.append(f\"{hours_in_words} hours and {minutes_in_words} minutes\")\n        except ValueError:\n            logger.warning(f\"Error in convert_date_time_to_words - time_str: {time_str}\")\n\n    return \" and \".join(result) if result else \"No date or time provided.\"\n\n\ndef process_datetime(dt):\n    # Example processing function: formatting datetime in a specific way\n    if isinstance(dt, (datetime, date)):  # Use the built-in datetime and date types\n        return dt.strftime(\"%Y-%m-%d\")  # Customize as needed\n    elif isinstance(dt, time):  # Use the built-in time type\n        return dt.strftime(\"%I:%M %p\")  # Customize as needed\n    return str(dt)\n\n\ndef extract_and_process_datetime(text):\n    # Improved regular expression for matching date and time patterns\n    date_pattern = r'\\b(?:\\d{1,2}(?:st|nd|rd|th)?[-/\\s]?)?(?:\\w+\\s)?\\b(?:\\d{1,2}(?:st|nd|rd|th)?[-/,]?\\s)?\\d{4}'\n    time_pattern = r'\\b(?:[01]?\\d|2[0-3]):[0-5]\\d\\b'  # Matches 24-hour format like '14:30'\n    \n    # Replace the original text with processed dates and times\n    updated_text = text\n    \n    # Find and process dates\n    date_matches = re.findall(date_pattern, text)\n    for date_str in date_matches:\n        try:\n            parsed_date = parser.parse(date_str, fuzzy=True)\n            processed_date = convert_date_time_to_words(date_str=str(parsed_date.date()))\n            updated_text = updated_text.replace(date_str, processed_date)\n        except (ValueError, OverflowError):\n            pass  # Ignore if parsing fails\n    \n    # Find and process times\n    time_matches = re.findall(time_pattern, text)\n    for time_str in time_matches:\n        try:\n            parsed_time = parser.parse(time_str, fuzzy=True)\n            processed_time = process_datetime(parsed_time.time())\n            processed_time = processed_time.split(\" \")\n            processed_time_words = convert_date_time_to_words(time_str=processed_time[0])\n            processed_time = processed_time_words + \" \" + processed_time[1]\n            updated_text = updated_text.replace(time_str, processed_time)\n        except (ValueError, OverflowError):\n            pass  # Ignore if parsing fails\n\n    return updated_text\n\n# text_paragraph = \"\"\"We have a meeting scheduled on 29th September 2024 at 14:30, and another follow-up on October 2nd, 2024 at 9:00. Please join us at 10:15 on the day of the event.\"\"\"\n# updated_text = extract_and_process_datetime(text_paragraph)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import torchaudio\n\ndef add_audio_file(row, audio_column_name, audio_files_folder):\n    primary_key = row['primary_key']\n    audio_file_path = os.path.join(audio_files_folder, f\"audio_{audio_column_name}_{primary_key}.wav\")\n    if os.path.exists(audio_file_path):\n        waveform, sample_rate = torchaudio.load(audio_file_path)\n        duration = waveform.size(1) / sample_rate  # Calculate duration in seconds\n        row[f'{audio_column_name}_audio'] = {\n            'waveform': waveform,            # The audio signal itself\n            'sample_rate': sample_rate,      # Sample rate of the audio\n            'duration': duration,            # Duration of the audio in seconds\n            'file_path': audio_file_path,    # File path of the audio\n            'audio_format': 'wav'            # Audio format\n        }\n        \n    else:\n        logger.warning(f\"Skipped Audio file with primary key: {primary_key} | audio_file_path: {audio_file_path}\")\n\n    return row","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"class TTSInferencePipeline:\n    def __init__(self, repo_id):\n        self.device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n        self.model = ParlerTTSForConditionalGeneration.from_pretrained(repo_id).to(self.device)\n        self.tokenizer = AutoTokenizer.from_pretrained(repo_id, padding_side=\"left\")\n        self.feature_extractor = AutoFeatureExtractor.from_pretrained(repo_id)\n        self.description_template = \"A female speaker delivers a slightly expressive and animated speech with a moderate speed and pitch. The recording is of very high quality, with the speaker's voice sounding clear and very close up.\"\n        logger.info(\"Text to Speech Pipeline - Initialized Sucessfully\")\n        \n    def single_text_preprocessing(text: str):\n        for func in [ extract_and_process_datetime, convert_numbers, contractions.fix ]:\n            text = func(text)\n        return text\n    \n    def batch_text_preprocessing(text_list: List[str]):\n        return [ self.single_text_preprocessing(text) for text in text_list ]\n        \n    def tokenize_inputs(self, input_texts, descriptions):\n        \"\"\"\n        Tokenizes input texts and descriptions for the model.\n        \"\"\"\n        prompt = self.tokenizer(input_texts, return_tensors=\"pt\", padding=True).to(self.device)\n        inputs = self.tokenizer(descriptions, return_tensors=\"pt\", padding=True).to(self.device)\n        return inputs, prompt\n\n    def run_inference(self, inputs, prompts, seed=0):\n        \"\"\"\n        Generates audio based on the tokenized inputs and prompts.\n        \"\"\"\n        with torch.no_grad():\n            generation = self.model.generate(\n                input_ids=inputs.input_ids,\n                attention_mask=inputs.attention_mask,\n                prompt_input_ids=prompts.input_ids,\n                prompt_attention_mask=prompts.attention_mask,\n                do_sample=True,\n                return_dict_in_generate=True,\n            )\n        return generation\n\n    def save_audio(self, generation, folder_path, column_name, primary_keys_list):\n        \"\"\"\n        Saves the generated audio as WAV files.\n        \"\"\"\n        for index, key in enumerate(primary_keys_list):\n            audio = generation.sequences[index, :generation.audios_length[index]]\n            wavfile.write(f\"{folder_path}/audio_{column_name}_{key}.wav\", rate=self.feature_extractor.sampling_rate, data=audio.cpu().numpy().squeeze())\n        logger.info(f\"Audio saved for keys: {primary_keys_list}\")\n        \n    def add_audio_files_to_dataset(self, dataset, audio_column_name: str, audio_files_folder: str): \n        dataset_with_audio = dataset.map(lambda example: add_audio_file(example, audio_column_name, audio_files_folder))\n        return dataset_with_audio\n\n    def run_batch_inference(self, dataset, batch_size, column_name, add_audio_files_to_dataset_flag):\n        \"\"\"\n        Runs inference on the dataset using batches of 'batch_size'.\n        \"\"\"\n        folder_path = create_folder(f\"Text2Sppech_AudioOutput_Column: {column_name}\")\n        batched_dataset = dataset.batch(batch_size=batch_size)\n        for batch_index in tqdm(range(len(batched_dataset))):\n            batch = batched_dataset[batch_index]\n            primary_keys = batch[\"primary_key\"]\n            input_texts = batch[column_name]\n            descriptions = len(batch[\"primary_key\"]) * [self.description_template]  # Using same description for each sample in the batch\n            inputs, prompts = self.tokenize_inputs(input_texts, descriptions)\n            generation = self.run_inference(inputs, prompts)\n            self.save_audio(generation, folder_path, column_name, primary_keys)\n        \n        logger.success(\"Batch Inference Completed Sucessfully\")\n        \n        if add_audio_files_to_dataset_flag:\n            return self.add_audio_files_to_dataset(\n                dataset=dataset, \n                audio_column_name=column_name,\n                audio_files_folder=folder_path\n            )\n        \n            logger.success(\"Audio files are added to dataset Sucessfully\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tts_inference = TTSInferencePipeline( repo_id=\"parler-tts/parler-tts-mini-v1\" )","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"batch_size = 8\ndataset = tts_inference.run_batch_inference(dataset, batch_size, column_name=\"question\", add_audio_files_to_dataset_flag=True)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"batch_size = 8\ndataset = tts_inference.run_batch_inference(dataset, batch_size, column_name=\"answer\", add_audio_files_to_dataset_flag=True)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from huggingface_hub import login\nfrom kaggle_secrets import UserSecretsClient\n\ntry: \n    # Get HF API Token\n    user_secrets = UserSecretsClient()\n    login(user_secrets.get_secret(\"Shirsh_Main_HF\"))\n    \n    # Push to HF\n    try:\n        dataset.push_to_hub(\"shirsh10mall/Speech_To_Speech_RAG_Processed_Dataset\", private=True)\n    except Exception as e:\n        print(f\"Couldn't push the dataset to hugging face account.\\nError {e}\")\n        \n    # save to Disk\n    try:\n        dataset.save_to_disk(\"Speech_To_Speech_RAG_Processed_Dataset\")\n    except Exception as e:\n        print(f\"Couldn't save the dataset to local disk.\\nError {e}\")\n\nexcept Exception as e:\n    print(f\"Error in Login to HF: {e}\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}